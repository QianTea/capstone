[{"E:\\ReactProject\\ReactCli\\react-project\\src\\index.js":"1","E:\\ReactProject\\ReactCli\\react-project\\src\\App.js":"2","E:\\ReactProject\\ReactCli\\react-project\\src\\reportWebVitals.js":"3","E:\\ReactProject\\ReactCli\\react-project\\src\\components\\navbar.js":"4","E:\\ReactProject\\ReactCli\\react-project\\src\\components\\NavBar2.js":"5","E:\\ReactProject\\ReactCli\\react-project\\src\\pages\\price.js":"6","E:\\ReactProject\\ReactCli\\react-project\\src\\pages\\product.js":"7","E:\\ReactProject\\ReactCli\\react-project\\src\\pages\\nopage.js":"8","E:\\ReactProject\\ReactCli\\react-project\\src\\pages\\layout.js":"9","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\index.js":"10","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\App.js":"11","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\reportWebVitals.js":"12","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\website\\webLayout.js":"13","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\nopage.js":"14","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\services\\auth.js":"15","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\Login.js":"16","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\Home.js":"17","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\Menu.js":"18","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\Employee.js":"19","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\StoreInfo.js":"20","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\Navbar.js":"21","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\Copyright.js":"22","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\deposits.js":"23","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\orders.js":"24","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\title.js":"25","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\addCategory.js":"26","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\addFoodType.js":"27","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\addProduct.js":"28","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\detail.js":"29","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\services\\auth.js":"30","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\layout.js":"31","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\addRole.js":"32","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\website\\pages\\homePage.js":"33","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\website\\pages\\contactPage.js":"34","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\website\\pages\\menuPage.js":"35","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\website\\pages\\webFooter.js":"36","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\website\\components\\webNav.js":"37","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pageStaffLogin.js":"38","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pageOrderHistory.js":"39","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pagePhoneOrder.js":"40","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pageCurrentOrder.js":"41","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\takeoutDisplay.js":"42","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\takeoutMenu.js":"43","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pageDineInOrder.js":"44","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\index.js":"45","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\nav.js":"46","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\dineInDisplay.js":"47","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\dineInMenu.js":"48","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\addEmployee.js":"49","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\productTags.js":"50","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\productCategories.js":"51","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\productDishes.js":"52","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\OrdersHistory.js":"53","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\RevenueHistory.js":"54","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\logout.js":"55","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\empLogout.js":"56","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\layout.js":"57","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\editRole.js":"58","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\avaliableTables.js":"59","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\editEmployee.js":"60","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\editTag.js":"61","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\editCategory.js":"62","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\editDishes.js":"63","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pageTakeoutOrder.js":"64","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\phoneDisplay.js":"65","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\phoneMenu.js":"66","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pageOrderDetail.js":"67","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\detailDisplay.js":"68","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\services\\clearAuth.js":"69"},{"size":536,"mtime":1675118023799,"results":"70","hashOfConfig":"71"},{"size":764,"mtime":1675123114343,"results":"72","hashOfConfig":"71"},{"size":362,"mtime":1675116534784,"results":"73","hashOfConfig":"71"},{"size":727,"mtime":1675120429173,"results":"74","hashOfConfig":"71"},{"size":5368,"mtime":1675123099536,"results":"75","hashOfConfig":"71"},{"size":130,"mtime":1675122708670,"results":"76","hashOfConfig":"71"},{"size":134,"mtime":1675122725808,"results":"77","hashOfConfig":"71"},{"size":123,"mtime":1675122817147,"results":"78","hashOfConfig":"71"},{"size":271,"mtime":1675122921789,"results":"79","hashOfConfig":"71"},{"size":536,"mtime":1675118023799,"results":"80","hashOfConfig":"81"},{"size":4767,"mtime":1680146596431,"results":"82","hashOfConfig":"81"},{"size":362,"mtime":1675116534784,"results":"83","hashOfConfig":"81"},{"size":1077,"mtime":1680143791702,"results":"84","hashOfConfig":"81"},{"size":151,"mtime":1676048809289,"results":"85","hashOfConfig":"81"},{"size":203,"mtime":1677772480275,"results":"86","hashOfConfig":"81"},{"size":4363,"mtime":1680182239704,"results":"87","hashOfConfig":"81"},{"size":5525,"mtime":1680182239706,"results":"88","hashOfConfig":"81"},{"size":1294,"mtime":1679605924427,"results":"89","hashOfConfig":"81"},{"size":10790,"mtime":1680197906992,"results":"90","hashOfConfig":"81"},{"size":16134,"mtime":1680182239705,"results":"91","hashOfConfig":"81"},{"size":4276,"mtime":1680144292098,"results":"92","hashOfConfig":"81"},{"size":509,"mtime":1678118647334,"results":"93","hashOfConfig":"81"},{"size":1750,"mtime":1680305468870,"results":"94","hashOfConfig":"81"},{"size":2372,"mtime":1680182239706,"results":"95","hashOfConfig":"81"},{"size":367,"mtime":1676222097447,"results":"96","hashOfConfig":"81"},{"size":4063,"mtime":1680191784366,"results":"97","hashOfConfig":"81"},{"size":4018,"mtime":1680191972728,"results":"98","hashOfConfig":"81"},{"size":9326,"mtime":1680195338745,"results":"99","hashOfConfig":"81"},{"size":511,"mtime":1678118721001,"results":"100","hashOfConfig":"81"},{"size":198,"mtime":1677772482058,"results":"101","hashOfConfig":"81"},{"size":1426,"mtime":1680147354996,"results":"102","hashOfConfig":"81"},{"size":4048,"mtime":1680186700815,"results":"103","hashOfConfig":"81"},{"size":6567,"mtime":1680307734224,"results":"104","hashOfConfig":"81"},{"size":4298,"mtime":1680306806448,"results":"105","hashOfConfig":"81"},{"size":6565,"mtime":1680307825269,"results":"106","hashOfConfig":"81"},{"size":2018,"mtime":1680306943197,"results":"107","hashOfConfig":"81"},{"size":3321,"mtime":1680307096177,"results":"108","hashOfConfig":"81"},{"size":3962,"mtime":1680182239706,"results":"109","hashOfConfig":"81"},{"size":5775,"mtime":1680199325233,"results":"110","hashOfConfig":"81"},{"size":2615,"mtime":1679951192997,"results":"111","hashOfConfig":"81"},{"size":6045,"mtime":1680182239706,"results":"112","hashOfConfig":"81"},{"size":18812,"mtime":1680182239706,"results":"113","hashOfConfig":"81"},{"size":3486,"mtime":1680182239706,"results":"114","hashOfConfig":"81"},{"size":2680,"mtime":1680028829725,"results":"115","hashOfConfig":"81"},{"size":8005,"mtime":1680182239706,"results":"116","hashOfConfig":"81"},{"size":4156,"mtime":1678737495260,"results":"117","hashOfConfig":"81"},{"size":18550,"mtime":1680182239707,"results":"118","hashOfConfig":"81"},{"size":6006,"mtime":1680182776572,"results":"119","hashOfConfig":"81"},{"size":6261,"mtime":1680186677392,"results":"120","hashOfConfig":"81"},{"size":6025,"mtime":1680198149268,"results":"121","hashOfConfig":"81"},{"size":6232,"mtime":1680197853841,"results":"122","hashOfConfig":"81"},{"size":5444,"mtime":1680196373213,"results":"123","hashOfConfig":"81"},{"size":8468,"mtime":1680201014761,"results":"124","hashOfConfig":"81"},{"size":3709,"mtime":1679665702165,"results":"125","hashOfConfig":"81"},{"size":379,"mtime":1680147457281,"results":"126","hashOfConfig":"81"},{"size":373,"mtime":1680142065891,"results":"127","hashOfConfig":"81"},{"size":1686,"mtime":1680147569782,"results":"128","hashOfConfig":"81"},{"size":3252,"mtime":1678900931313,"results":"129","hashOfConfig":"81"},{"size":1718,"mtime":1679874746640,"results":"130","hashOfConfig":"81"},{"size":4529,"mtime":1680094132444,"results":"131","hashOfConfig":"81"},{"size":2930,"mtime":1678901884776,"results":"132","hashOfConfig":"81"},{"size":4025,"mtime":1678902159678,"results":"133","hashOfConfig":"81"},{"size":7364,"mtime":1678902511694,"results":"134","hashOfConfig":"81"},{"size":2641,"mtime":1679950715290,"results":"135","hashOfConfig":"81"},{"size":18800,"mtime":1680182239706,"results":"136","hashOfConfig":"81"},{"size":3482,"mtime":1680182239707,"results":"137","hashOfConfig":"81"},{"size":2347,"mtime":1680182239706,"results":"138","hashOfConfig":"81"},{"size":16043,"mtime":1680182239707,"results":"139","hashOfConfig":"81"},{"size":128,"mtime":1680145063431,"results":"140","hashOfConfig":"81"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"1ki1qr4",{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"1waeq6p",{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"193"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"172"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295"},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299"},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343"},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347"},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354"},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358"},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362"},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370"},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381"},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385"},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\ReactProject\\ReactCli\\react-project\\src\\index.js",[],[],[],"E:\\ReactProject\\ReactCli\\react-project\\src\\App.js",["389","390","391"],[],"E:\\ReactProject\\ReactCli\\react-project\\src\\reportWebVitals.js",[],[],"E:\\ReactProject\\ReactCli\\react-project\\src\\components\\navbar.js",[],[],"E:\\ReactProject\\ReactCli\\react-project\\src\\components\\NavBar2.js",[],[],"E:\\ReactProject\\ReactCli\\react-project\\src\\pages\\price.js",[],[],"E:\\ReactProject\\ReactCli\\react-project\\src\\pages\\product.js",[],[],"E:\\ReactProject\\ReactCli\\react-project\\src\\pages\\nopage.js",[],[],"E:\\ReactProject\\ReactCli\\react-project\\src\\pages\\layout.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\index.js",[],[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\App.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\reportWebVitals.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\website\\webLayout.js",["392"],[],"import { Outlet } from \"react-router-dom\";\r\n// Components\r\nimport WebNav from \"./components/webNav\";\r\nimport WebFooter from \"./pages/webFooter\";\r\n// navigation\r\nimport { useNavigate,useLocation } from \"react-router-dom\";\r\nimport {useEffect } from \"react\";\r\n\r\n// style\r\nconst styles = {\r\n    page: {\r\n        backgroundColor: '#24242D',\r\n        color: '#fff',\r\n        textAlign: 'center',\r\n    },\r\n    body: {\r\n        backgroundColor: '#24242D',\r\n        minHeright: '1000vh',\r\n    },\r\n};\r\n\r\n// layout of store website\r\nconst WebLayout = () => {\r\n    // always show home page first\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    useEffect(() => {\r\n        const currentPath = location.pathname;\r\n        if (currentPath == '/') navigate('/home');\r\n    }, [navigate, location]);\r\n    return (\r\n        < div style={styles.page}>\r\n            <WebNav />\r\n            <div style={styles.body}>\r\n                <Outlet />\r\n            </div>\r\n            <WebFooter sx={{ mt: 8, mb: 4 }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WebLayout; ","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\nopage.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\services\\auth.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\Login.js",["393","394","395"],[],"import * as React from 'react';\r\n// login\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n//mui\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Login() {\r\n  const navigate = useNavigate();\r\n \r\n  const callLoginApi = (name, password) => {\r\n    var data = JSON.stringify({\r\n      \"name\": name,\r\n      \"password\": password\r\n    });\r\n\r\n    axios({\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: 'http://localhost:5500/auth/login',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      data: data\r\n    })\r\n      .then(function (response) {\r\n        let data = response.data;\r\n        console.log('login return');\r\n        if (data.status == 200) {\r\n          localStorage.setItem('token', data.data.token);\r\n          localStorage.setItem('isLoggedIn', true);\r\n          console.log('go to admin');\r\n          navigate('/admin/home');\r\n        } else {\r\n          alert(data.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    callLoginApi(data.get('email'), data.get('password'));\r\n    console.log({\r\n      email: data.get('email'),\r\n      password: data.get('password'),\r\n    });\r\n  };\r\n\r\n  const forgotPswd = (name) =>{\r\n    let data = {\r\n      \"username\": name\r\n    };\r\n    \r\n    let config = {\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: 'http://localhost:5500/auth/forgot-password',\r\n      headers: { \r\n        'Content-Type': 'application/json'\r\n      },\r\n      data : data\r\n    };\r\n    \r\n    axios.request(config)\r\n    .then((response) => {\r\n      console.log(JSON.stringify(response.data));\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: '#ffc107' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" onClick={forgotPswd} variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}",[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\Home.js",["396","397"],[],"import React, { useState, useEffect } from 'react';\r\n// api\r\nimport axios from 'axios';\r\n//mui\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n// components\r\nimport Deposits from '../components/deposits';\r\nimport Orders from '../components/orders';\r\nimport AvailableTables from '../components/avaliableTables';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { removeAuthService } from '../services/clearAuth';\r\n\r\nconst mdTheme = createTheme();\r\n\r\n\r\n\r\nfunction DashboardContent() {\r\n    const [tables, setTables] = useState([]);\r\n    const navigate = useNavigate();\r\n    const token = localStorage.getItem('token');\r\n\r\n    useEffect(() => {\r\n        const config = {\r\n            method: 'get',\r\n            maxBodyLength: Infinity,\r\n            url: 'http://localhost:5500/tables',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n            },\r\n        };\r\n\r\n        axios\r\n            .request(config)\r\n            .then((response) => {\r\n                if (response.data.status == 401) {\r\n                    \r\n                    removeAuthService();\r\n                    navigate('/admin/logout');\r\n                }\r\n                setTables(response.data.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, [setTables, navigate]);\r\n    // get table list\r\n    const availableTables = tables && tables.filter(table => table.tableStatus === 'available');\r\n    const usedTables = tables && tables.filter(table => table.tableStatus === 'used');\r\n    // count number\r\n    const numAvailableTables = availableTables.length;\r\n    const numUsedTables = usedTables.length;\r\n\r\n    return (\r\n        <ThemeProvider theme={mdTheme}>\r\n            <Box sx={{ display: 'flex' }}>\r\n                <CssBaseline />\r\n                <Box\r\n                    component=\"main\"\r\n                    sx={{\r\n                        backgroundColor: (theme) =>\r\n                            theme.palette.mode === 'light'\r\n                                ? theme.palette.grey[100]\r\n                                : theme.palette.grey[900],\r\n                        flexGrow: 1,\r\n                        height: '100vh',\r\n                        overflow: 'auto',\r\n                    }}\r\n                >\r\n                    <Toolbar />\r\n                    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n                        <Grid container spacing={3}>\r\n                            {/* Blank-Avaliable Tables*/}\r\n                            <Grid item xs={12} md={3} lg={3}>\r\n                                {/* <Charts /> */}\r\n                                <AvailableTables\r\n                                    availableTables={numAvailableTables}\r\n                                    orderedTables={numUsedTables}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={3} lg={3}>\r\n                                <Paper\r\n                                    sx={{\r\n                                        p: 2,\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        height: 240,\r\n                                    }}\r\n                                >\r\n                                    {/* <Charts /> */}\r\n\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={3} lg={3}>\r\n                                <Paper\r\n                                    sx={{\r\n                                        p: 2,\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        height: 240,\r\n                                    }}\r\n                                >\r\n                                    {/* <Charts /> */}\r\n\r\n                                </Paper>\r\n                            </Grid>\r\n                            {/* Today's Revenue */}\r\n                            <Grid item xs={12} md={4} lg={3}>\r\n                                <Paper\r\n                                    sx={{\r\n                                        p: 2,\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        height: 240,\r\n                                    }}\r\n                                >\r\n                                    <Deposits />\r\n                                </Paper>\r\n                            </Grid>\r\n                            {/* Today's Orders */}\r\n                            <Grid item xs={12}>\r\n                                <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\r\n                                    <Orders />\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </Box>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default function Dashboard() {\r\n    return <DashboardContent />;\r\n}","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\Menu.js",["398","399","400","401","402"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// API\r\nimport axios from 'axios';\r\n// mui\r\nimport Box from '@mui/material/Box';\r\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Container from '@mui/material/Container';\r\n\r\nimport Tags from \"../components/productTags\";\r\nimport Categories from \"../components/productCategories\";\r\nimport Dishes from \"../components/productDishes\";\r\n\r\n// styles\r\nconst mdTheme = createTheme();\r\n\r\n\r\nconst Products = () => {\r\n\r\n    return (\r\n        <ThemeProvider theme={mdTheme}>\r\n\r\n            <Box sx={{ display: 'flex' }}>\r\n                <Box\r\n                    component=\"form\"\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Container maxWidth=\"lg\" >\r\n                        <h1>Products Management</h1>\r\n                        {/* Tag Management */}\r\n                        <Tags />\r\n                        {/* Category Management */}\r\n                        <Categories />\r\n                        {/* Product Management */}\r\n                        <Dishes />\r\n                    </Container>\r\n                </Box>\r\n            </Box>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default Products;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\Employee.js",["403","404"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// API\r\nimport axios from 'axios';\r\n//mui\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Paper } from \"@mui/material\";\r\nimport {\r\n    Table, TableBody, TableCell,\r\n    TableContainer, TableHead, TableRow\r\n} from \"@mui/material\";\r\nimport Container from '@mui/material/Container';\r\n// alert\r\nimport { Alert, AlertTitle } from '@mui/material';\r\n\r\n// styles\r\nconst mdTheme = createTheme();\r\nconst styles = {\r\n    table: {\r\n        minWidth: '50%',\r\n        width: '100%',\r\n        display: 'flex',\r\n    },\r\n    tbTitle: {\r\n        fontSize: '1.5rem',\r\n        margin: '2%',\r\n    },\r\n};\r\n\r\nconst Employee = () => {\r\n    const token = localStorage.getItem('token');\r\n    // alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState('success');\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    // API - get role \r\n    const [roleList, setRoleList] = useState([{}]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await axios.get('http://localhost:5500/staff-roles', {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + token,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                });\r\n                setRoleList(result.data.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n\r\n        };\r\n        fetchData();\r\n    }, [setRoleList]);\r\n    const getRoles = async () => {\r\n        try {\r\n            const result = await axios.get('http://localhost:5500/staff-roles', {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            setRoleList(result.data.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    //API - get employee\r\n    const [employeeList, setEmployeeList] = useState({ data: [] });\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await axios.get('http://localhost:5500/staffs', {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + token,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                });\r\n                setEmployeeList(result.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [setEmployeeList]);\r\n    const getEmps = async () => {\r\n        try {\r\n            const result = await axios.get('http://localhost:5500/staffs', {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            setEmployeeList(result.data.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    // delete employee function\r\n    const handleEmployeeDelete = (_id) => {\r\n        const employeeToDelete = employeeList.data[_id];\r\n        axios.delete(`http://localhost:5500/staffs/${employeeToDelete._id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                getEmps();\r\n                setShowAlert(true);\r\n                setAlertSeverity('success');\r\n                setAlertMessage('Employee deleted successfully');\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setShowAlert(true);\r\n                setAlertSeverity('error');\r\n                setAlertMessage('Error deleting employee. Please try again later.');\r\n            });\r\n    };\r\n    // delete role function\r\n    const handleRoleDelete = (_id) => {\r\n        const RoleToDelete = _id;\r\n        axios.delete(`http://localhost:5500/staff-roles/${RoleToDelete}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                getRoles();\r\n                setShowAlert(true);\r\n                setAlertSeverity('success');\r\n                setAlertMessage('Role deleted successfully');\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setShowAlert(true);\r\n                setAlertSeverity('error');\r\n                setAlertMessage('Error deleting role. Please try again later.');\r\n            });\r\n    };\r\n    return (\r\n        <ThemeProvider theme={mdTheme}>\r\n            {/*  display list of roles  */}\r\n            <Box\r\n                component=\"form\"\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n                    <h1>Employees Management</h1>\r\n                    {/* // alert */}\r\n                    {showAlert &&\r\n                        <Alert severity={alertSeverity} onClose={() => setShowAlert(false)} sx={{ mb: 2 }}>\r\n                            <AlertTitle>{alertSeverity === 'success' ? 'Success' : 'Error'}</AlertTitle>\r\n                            {alertMessage}\r\n                        </Alert>\r\n                    }\r\n                    <span style={styles.tbTitle}>Role</span>\r\n                    <Link to=\"/admin/employee/addRole\">\r\n                        <Button variant=\"contained\" startIcon={<AddIcon />} color=\"primary\" >\r\n                            Add Role\r\n                        </Button>\r\n                    </Link>\r\n                    <TableContainer component={Paper} style={styles.table}>\r\n                        <Table >\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Description</TableCell>\r\n                                    <TableCell>Action</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {roleList.map((role, _id) => (\r\n                                    <TableRow key={_id}>\r\n                                        <TableCell>{role.name}</TableCell>\r\n                                        <TableCell>{role.description}</TableCell>\r\n                                        <TableCell>\r\n                                            {/* <Link to={`/admin/employee/editRole/${role._id}`}>\r\n                                                <IconButton aria-label=\"edit\" color=\"primary\">\r\n                                                    <EditIcon />\r\n                                                </IconButton>\r\n                                            </Link> */}\r\n                                            <IconButton\r\n                                                aria-label=\"delete\"\r\n                                                color=\"error\"\r\n                                                onClick={() => handleRoleDelete(role._id)}\r\n                                            >\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Container>\r\n            </Box>\r\n\r\n            {/*  display list of employees  */}\r\n            <Box\r\n                component=\"form\"\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n                    <span style={styles.tbTitle}>Employee</span>\r\n                    <Link to=\"/admin/employee/addEmployee\">\r\n                        <Button variant=\"contained\" startIcon={<AddIcon />} color=\"primary\" >\r\n                            Add Employee\r\n                        </Button>\r\n                    </Link>\r\n\r\n                    <TableContainer component={Paper} style={styles.table}>\r\n                        <Table >\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Role</TableCell>\r\n                                    <TableCell>Action</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {employeeList.data.map((employee, _id) => (\r\n                                    <TableRow key={_id}>\r\n                                        <TableCell>{employee.name}</TableCell>\r\n                                        <TableCell>{employee.role ? employee.role.name : ''}</TableCell>\r\n                                        <TableCell>\r\n                                            {/* <Link to={`/admin/employee/editEmployee/${employee._id}`}>\r\n                                                <IconButton aria-label=\"edit\" color=\"primary\">\r\n                                                    <EditIcon />\r\n                                                </IconButton>\r\n                                            </Link> */}\r\n                                            <IconButton\r\n                                                aria-label=\"delete\"\r\n                                                color=\"error\"\r\n                                                onClick={() => handleEmployeeDelete(_id)}\r\n                                            >\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Container>\r\n            </Box>\r\n        </ThemeProvider >\r\n    );\r\n}\r\nexport default Employee;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\StoreInfo.js",["405","406","407","408","409","410","411","412"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\n// API\r\nimport axios from 'axios';\r\n// mui\r\nimport { Box } from \"@mui/system\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Item from '@mui/material/Grid';\r\nimport { IconButton } from \"@mui/material\";\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\n// business time\r\nimport { Table, TableRow, TableCell } from '@mui/material';\r\n\r\n// styles\r\nconst mdTheme = createTheme();\r\nconst styles = {\r\n    img: {\r\n        // width: '100%',\r\n        height: '200px',\r\n    },\r\n    TableCellLeft: {\r\n        padding: '0px',\r\n        width: '100px',\r\n        border: 'none',\r\n    },\r\n    TableCellRight: {\r\n        padding: '0px',\r\n        width: '100px',\r\n        border: 'none',\r\n    },\r\n    TableCell: {\r\n        padding: '0px',\r\n        width: '300px',\r\n    },\r\n};\r\n\r\n//data\r\nconst storeInfo = {\r\n    // img: '../logo.png',\r\n    // name: 'Riverside Fish Hut',\r\n    // introduction: 'Founded in 2012, Riverside Fish Hut is known for revolutionizing the way people eat and enjoy food. Serving classic fish and chips in a cozy riverside setting, with a patio during the summer! Follow us on Facebook!',\r\n    // phone: '(519) 653-0788',\r\n    // onlineLink: 'https://riversidefishhutmenu.ca/',\r\n    // address: {\r\n    //     Street: 'Unit-B 157 King Street West',\r\n    //     City: 'Cambridge', Province: 'ON',\r\n    //     PostalCode: 'N3H 1B5', Country: 'Canada',\r\n    // },\r\n    // businessHour: {\r\n    //     monTime: 'Closed',\r\n    //     tueTime: '11:30 - 19:00',\r\n    //     wedTime: '11:30 - 19:00',\r\n    //     thuTime: '11:30 - 19:00',\r\n    //     friTime: '11:30 - 19:00',\r\n    //     satTime: '11:30 - 19:30 (may change in holiday)',\r\n    //     sunTime: 'Closed',\r\n    // },\r\n\r\n};\r\n\r\nconst BusinessHour = (props) => {\r\n    // API - get store info\r\n    const [businessHour, setBusinessHour] = useState(null\r\n    );\r\n\r\n    const handleChange = (event, index) => {\r\n        const newValue = event.target.value;\r\n        const newTime = [...businessHour];\r\n        newTime[index].businessTime = event.target.value;\r\n        newTime[index].isChange = true;\r\n        setBusinessHour(newTime);\r\n        props.getTime(businessHour);\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const fetchData = async () => {\r\n            const result = await axios.get('http://localhost:5500/website/business-hours');\r\n            console.log(result.data.data);\r\n            setBusinessHour(result.data.data);\r\n            console.log(businessHour);\r\n            props.getTime(result.data.data);\r\n        };\r\n        fetchData();\r\n    }, [props.getTime, setBusinessHour]);\r\n\r\n    return (\r\n        <div >\r\n            <h3>Business Hours</h3>\r\n            <div>\r\n                {businessHour && businessHour.map((item, index) => (\r\n                    <TableRow key={item.dayOfWeek}>\r\n                        <TableCell style={styles.TableCellRight} align=\"left\" size=\"small\" padding=\"none\">\r\n                            <TextField\r\n                                style={styles.TableCell}\r\n                                id={`${item.dayOfWeek}Time`}\r\n                                label={`${item.dayOfWeek} Time`}\r\n                                variant=\"filled\"\r\n                                defaultValue={item.businessTime}\r\n                                onChange={event => handleChange(event, index)}\r\n                            />\r\n                        </TableCell>\r\n                    </TableRow>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst StoreInfo = () => {\r\n    // upload log img\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    let businessTime;\r\n    const navigate = useNavigate();\r\n    const getBusinessTime = (data) => {\r\n        businessTime = data;\r\n    }\r\n\r\n    const handleFileChange = (event) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(event.target.files[0]);\r\n        reader.onloadend = () => {\r\n            const base64data = reader.result;\r\n            setSelectedFile(base64data);\r\n            console.log(base64data); // the Base64 string representation of the blob\r\n        };\r\n\r\n    };\r\n    // API - get store info\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const token = localStorage.getItem('token');\r\n        //update for business hour\r\n        if (businessTime && businessTime.length > 0) {\r\n            businessTime.map(v => {\r\n                if (v.isChange) {\r\n                    axios.request({\r\n                        method: 'put',\r\n                        maxBodyLength: Infinity,\r\n                        url: 'http://localhost:5500/website-update/business-hours/'+v._id,\r\n                        headers: {\r\n                            'Authorization': 'Bearer ' + token,\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        data: JSON.stringify({businessTime: v.businessTime})\r\n                        })\r\n                        .then((response) => {\r\n                            console.log(JSON.stringify(response.data));\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error);\r\n                        });\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        let data = JSON.stringify({\r\n            \"storeName\": document.querySelector('#storeName').value,\r\n            \"logoImage\": document.querySelector('#storeLogo').src,\r\n            \"description\": document.querySelector('#storeIntroduction').value,\r\n            \"address\": document.querySelector('#address').value,\r\n            \"phoneNumber\": document.querySelector('#phone').value,\r\n            \"onlineOrderLinks\": [\r\n            ]\r\n\r\n        });\r\n\r\n\r\n        \r\n        let config = {\r\n            method: 'post',\r\n            maxBodyLength: Infinity,\r\n            url: 'http://localhost:5500/website-update',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data: data\r\n        };\r\n\r\n\r\n\r\n        axios.request(config)\r\n            .then((response) => {\r\n                let result = response.data;\r\n                if (result.status == 401) {\r\n                    alert('token error');\r\n                    navigate('/admin/login');\r\n                } else if (result.status == 200 && result.data) {\r\n                    alert(result.message);\r\n                    setStoreInfo(response.data.data);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const [storeInfo, setStoreInfo] = useState({\r\n        _id: '',\r\n        storeName: '',\r\n        logoImage: '',\r\n        description: '',\r\n        address: '',\r\n        phoneNumber: '',\r\n        onlineOrderLinks: []\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            const result = await axios.get('http://localhost:5500/website');\r\n            setStoreInfo(result.data.data);\r\n        };\r\n        fetchData();\r\n    }, [setStoreInfo]);\r\n    return (\r\n        <ThemeProvider theme={mdTheme}>\r\n            <Box sx={{\r\n                display: 'flex',\r\n                '& .MuiTextField-root': { m: 1, width: '55ch' },\r\n            }}>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        backgroundColor: (theme) =>\r\n                            theme.palette.mode === 'light'\r\n                                ? theme.palette.grey[100]\r\n                                : theme.palette.grey[900],\r\n                        flexGrow: 1,\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n                        <Grid >\r\n                            <form name=\"addItem\">\r\n                                <Grid container spacing={1}>\r\n                                    {/* Left - logo & business hours*/}\r\n                                    <Grid item xs={12} md={4} lg={4}>\r\n                                        {/* upload logo img */}\r\n                                        <Item >\r\n                                            <img style={styles.img}\r\n                                                id=\"storeLogo\"\r\n                                                src={selectedFile || storeInfo.logoImage}\r\n                                                alt={storeInfo.name} />\r\n                                        </Item>\r\n                                        <Item >\r\n                                            <Button variant=\"contained\" component=\"label\">\r\n                                                Upload Logo\r\n                                                <input hidden accept=\"image/*\" multiple type=\"file\" onChange={handleFileChange} />\r\n                                            </Button>\r\n                                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"label\">\r\n                                                <PhotoCamera />\r\n                                                <input hidden accept=\"image/*\" type=\"file\" onChange={handleFileChange} />\r\n                                            </IconButton>\r\n                                        </Item>\r\n                                        {/* Business Hours */}\r\n                                        <Item><BusinessHour getTime={getBusinessTime} /></Item>\r\n                                    </Grid>\r\n\r\n                                    {/* Right - input store info */}\r\n                                    <Grid item xs={12} md={8} lg={8}>\r\n                                        <h1>Store Info</h1>\r\n                                        <Item>\r\n                                            {/* store name */}\r\n                                            <div>\r\n                                                <TextField\r\n                                                    id=\"storeName\"\r\n                                                    label=\"storeName\"\r\n                                                    variant=\"filled\"\r\n                                                    multiline\r\n                                                    defaultValue={storeInfo.storeName}\r\n                                                />\r\n\r\n                                            </div>\r\n                                            {/* store  introduction */}\r\n                                            <div>\r\n                                                <TextField\r\n                                                    id=\"storeIntroduction\"\r\n                                                    label=\" Introduction\"\r\n                                                    multiline\r\n                                                    rows={5}\r\n                                                    variant=\"filled\"\r\n                                                    fullWidth\r\n                                                    defaultValue={storeInfo.description}\r\n                                                />\r\n                                            </div>\r\n                                            {/* phone number */}\r\n                                            <div>\r\n                                                <TextField\r\n                                                    id=\"phone\"\r\n                                                    label=\"Phone\"\r\n                                                    variant=\"filled\"\r\n                                                    size=\"small\"\r\n                                                    multiline\r\n                                                    defaultValue={storeInfo.phoneNumber}\r\n                                                />\r\n                                            </div>\r\n                                            {/* Address */}\r\n                                            <div>\r\n                                                <h3>Address</h3>\r\n                                                <Grid item xs={12} >\r\n                                                    <TextField id=\"address\" label=\"Address\"\r\n                                                        variant=\"filled\"\r\n                                                        multiline\r\n                                                        fullWidth\r\n                                                        defaultValue={storeInfo.address}\r\n                                                    />\r\n                                                </Grid>\r\n\r\n                                                {/* <Grid container spacing={1}>\r\n                                                    <Grid item xs={3} >\r\n                                                        <TextField id=\"city\" label=\"City\"\r\n                                                            variant=\"filled\"\r\n                                                            style={{ width: \"150px\" }}\r\n                                                            defaultValue={storeInfo.address.City}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                    <Grid item xs={2}>\r\n                                                        <TextField id=\"province\" label=\"Province\"\r\n                                                            variant=\"filled\"\r\n                                                            style={{ width: \"100px\" }}\r\n                                                            defaultValue={storeInfo.address.Province}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                    <Grid item xs={4} >\r\n                                                        <TextField id=\"postalCode\" label=\"PostalCode\"\r\n                                                            variant=\"filled\"\r\n                                                            style={{ width: \"200px\" }}\r\n                                                            defaultValue={storeInfo.address.PostalCode}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n\r\n\r\n\r\n                                                <TextField id=\"country\" label=\"Country\"\r\n                                                    variant=\"filled\"\r\n                                                    defaultValue={storeInfo.address.Country}\r\n                                                /> */}\r\n\r\n\r\n                                            </div>\r\n                                            <p></p>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                startIcon={<SendIcon />}\r\n                                                color=\"success\"\r\n                                                onClick={handleSubmit}>\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Item>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n                        </Grid>\r\n                    </Container>\r\n                </Box>\r\n            </Box>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default StoreInfo;\r\n\r\n","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\Navbar.js",["413","414"],[],"import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginService } from '../services/auth';\r\n// mui\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\r\n//style\r\nconst styles= {\r\n  nav:{\r\n   backgroundColor: 'rgb(12 113 191)',\r\n  },\r\n };\r\n // data\r\nconst DefaultPages = [\r\n\r\n];\r\n\r\nfunction ResponsiveAppBar(props) {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const clickPage = (page = 'default') => {\r\n    //alert(page);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" style={styles.nav}>\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <ManageAccountsIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"/\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'none', md: 'flex' },\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            RFH Management\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {props.pages && props.pages.map((page) => (\r\n                <MenuItem key={page.label} onClick={clickPage}>\r\n                  <Typography textAlign=\"center\">{page.label}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n\r\n          <ManageAccountsIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'flex', md: 'none' },\r\n              flexGrow: 1,\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            RFH Management Panel\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {props.pages && props.pages.map((page) => (\r\n\r\n              <Link to={`/${page.value}`}>\r\n                <Button\r\n                  key={page.label}\r\n                  // onClick={() => clickPage(page)}\r\n                  sx={{ my: 2, color: 'white', display: 'block' }}\r\n                >\r\n                  {page.label}\r\n                </Button>\r\n              </Link>\r\n\r\n            ))}\r\n          </Box>\r\n\r\n\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default ResponsiveAppBar;\r\n","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\Copyright.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\deposits.js",["415","416","417"],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\orders.js",["418","419","420"],[],"import React ,{ useState, useEffect } from 'react';\r\n// api\r\nimport axios from 'axios';\r\n//mui\r\nimport Link from '@mui/material/Link';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Title from './title';\r\n\r\nexport default function Orders() {\r\n  const [orders, setOrders] = useState([]);\r\n  const [firstFiveOrders, setFirstFiveOrders] = useState([]);\r\n  \r\n  const token = localStorage.getItem('token');\r\n    \r\n  useEffect(() => {\r\n    const config = {\r\n      method: 'get',\r\n      maxBodyLength: Infinity,\r\n      url: 'http://localhost:5500/admin-orders/todayOrders',\r\n      headers: {\r\n        'Authorization': 'Bearer ' + token,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(config)\r\n      .then((response) => {\r\n        setOrders(response.data.data.orders);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [setOrders]);\r\n  console.log(orders);\r\n  const lastFiveOrders = orders ? orders.slice().reverse().slice(0, 5) : [];\r\n\r\n  const formatTime = (timeString) => {\r\n    const date = new Date(timeString);\r\n    return date.toLocaleString().replace(', ', ' ');\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Last 5 Orders</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Time</TableCell>\r\n            <TableCell align=\"center\">Order Type</TableCell>\r\n            <TableCell align=\"center\">Sale Amount</TableCell>\r\n            <TableCell align=\"center\">Server</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {lastFiveOrders.map((o) => (\r\n            <TableRow key={o._id}>\r\n              <TableCell  align=\"center\">{formatTime(o.completedTime)}</TableCell>\r\n              <TableCell align=\"center\">{o.orderType}</TableCell>\r\n              <TableCell align=\"center\">{`$${o.totalCost}`}</TableCell>\r\n              <TableCell align=\"center\">{o.staff}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <Link color=\"primary\" \r\n      href=\"/admin/orderhistory\" \r\n      //onClick={''} \r\n      sx={{ mt: 3 }}>\r\n        See more orders\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n}","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\title.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\addCategory.js",["421"],[],"import React,{ useState }  from \"react\";\r\nimport { Link, useParams } from 'react-router-dom'\r\n//api\r\nimport axios from 'axios';\r\n//mui\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n// alert\r\nimport { Alert, AlertTitle } from '@mui/material';\r\n\r\nconst AddCategory = () => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    // alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState('success');\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // handle form submit logic here\r\n        const data = { name, description };\r\n        axios.post('http://localhost:5500/products-categories', data, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setShowAlert(true);\r\n                setAlertSeverity('success');\r\n                setAlertMessage('Category added successfully');\r\n                setName('');\r\n                setDescription('');\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setShowAlert(true);\r\n                setAlertSeverity('error');\r\n                setAlertMessage('Error adding category. Please try again later.');\r\n            });\r\n    }\r\n    return (\r\n        <Box\r\n            sx={{\r\n                marginTop: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                '& .MuiTextField-root': { m: 1, width: '40ch' },\r\n            }}>\r\n            <h1>Add Category</h1>\r\n            {showAlert &&\r\n                <Alert severity={alertSeverity} onClose={() => setShowAlert(false)} sx={{ mb: 2 }}>\r\n                    <AlertTitle>{alertSeverity === 'success' ? 'Success' : 'Error'}</AlertTitle>\r\n                    {alertMessage}\r\n                </Alert>\r\n            }\r\n            <Box component=\"form\"\r\n                sx={{ mt: 2, mb: 3 }}\r\n                noValidate\r\n                autoComplete=\"off\" >\r\n                <form name=\"addItem\">\r\n                    <div>\r\n                        name:\r\n                        <TextField\r\n                            id=\"cateName\"\r\n                            label=\"name\"\r\n                            variant=\"outlined\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        description:\r\n                        <TextField\r\n                            id=\"cateDescription\"\r\n                            label=\"description\"\r\n                            variant=\"outlined\"\r\n                            multiline\r\n                            minRows={4}\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        />\r\n                    </div>\r\n                \r\n                    <Button fullWidth\r\n                    type=\"submit\"\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                        startIcon={<SendIcon />}\r\n                        color=\"success\"\r\n                        onClick={handleSubmit}>\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n\r\n                <Link\r\n                    variant=\"body2\"\r\n                    to=\"/admin/menu\">\r\n                    Go back to Menu\r\n                </Link>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport default AddCategory;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\addFoodType.js",["422","423"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n// API\r\nimport axios from 'axios';\r\n// mui\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n// alert\r\nimport { Alert, AlertTitle } from '@mui/material';\r\n\r\nconst AddFoodTag = () => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    // alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState('success');\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // handle form submit logic here\r\n        const data = { name, description };\r\n        axios.post('http://localhost:5500/product-foodtype', data, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setShowAlert(true);\r\n                setAlertSeverity('success');\r\n                setAlertMessage('Food tag added successfully');\r\n                setName('');\r\n                setDescription('');\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setShowAlert(true);\r\n                setAlertSeverity('error');\r\n                setAlertMessage('Error adding food tag. Please try again later.');\r\n            });\r\n    }\r\n    return (\r\n        <Box\r\n            sx={{\r\n                marginTop: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                '& .MuiTextField-root': { m: 1, width: '40ch' },\r\n            }}>\r\n            <h1>Add Food Tag</h1>\r\n            {showAlert &&\r\n                <Alert severity={alertSeverity} onClose={() => setShowAlert(false)} sx={{ mb: 2 }}>\r\n                    <AlertTitle>{alertSeverity === 'success' ? 'Success' : 'Error'}</AlertTitle>\r\n                    {alertMessage}\r\n                </Alert>\r\n            }\r\n            <Box component=\"form\"\r\n                sx={{ mt: 2, mb: 3 }}\r\n                noValidate\r\n                autoComplete=\"off\" >\r\n                <form name=\"addItem\">\r\n                    <div>\r\n                        name:\r\n                        <TextField\r\n                            id=\"tyagName\"\r\n                            label=\"name\"\r\n                            variant=\"outlined\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        description:\r\n                        <TextField\r\n                            id=\"tagDescription\"\r\n                            label=\"description\"\r\n                            variant=\"outlined\"\r\n                            multiline\r\n                            minRows={4}\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Button fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                        startIcon={<SendIcon />}\r\n                        color=\"success\"\r\n                        onClick={handleSubmit}>\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n\r\n                <Link\r\n                    variant=\"body2\"\r\n                    to=\"/admin/menu\">\r\n                    Go back to Menu\r\n                </Link>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport default AddFoodTag;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\addProduct.js",["424","425","426","427","428"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from 'react-router-dom'\r\n//api\r\nimport axios from 'axios';\r\n//mui\r\nimport Box from '@mui/material/Box';\r\nimport MenuItem from '@mui/material/IconButton';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n// alert\r\nimport { Alert, AlertTitle } from '@mui/material';\r\n\r\nconst AddProduct = () => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    // API - get categories \r\n    const [categories, setCategories] = useState([]);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await axios.get('http://localhost:5500/products-categories', {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + token,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                });\r\n                console.log(result.data);\r\n                setCategories(result.data.data.map((item) => ({\r\n                    _id: item._id,\r\n                    name: item.name,\r\n                    description: item.description,\r\n                })));\r\n                console.log(result.data.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [setCategories]);\r\n\r\n    // API - get tags \r\n    const [tags, setTags] = useState([{}]);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await axios.get('http://localhost:5500/product-foodtype', {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + token,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                });\r\n                console.log(result.data);\r\n                setTags(result.data.data);\r\n                console.log(result.data.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [setTags]);\r\n    // alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState('success');\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    // add product\r\n    const [name, setName] = useState('');\r\n    const [altName, setAltName] = useState('');\r\n    const [dineInPrice, setDineInPrice] = useState('');\r\n    const [takeOutPrice, setTakeOutPrice] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [foodTag, setFoodTag] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [quality, setQuality] = useState(1);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // handle form submit logic here\r\n        const data = { name, altName, dineInPrice, takeOutPrice, category, foodType: [foodTag],image,quality };\r\n        axios.post('http://localhost:5500/products', data, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setShowAlert(true);\r\n                setAlertSeverity('success');\r\n                setAlertMessage('Product added successfully');\r\n                setName('');\r\n                setAltName('');\r\n                setDineInPrice('');\r\n                setTakeOutPrice('');\r\n                setCategory('');\r\n                setFoodTag('');\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setShowAlert(true);\r\n                setAlertSeverity('error');\r\n                setAlertMessage('Error adding product. Please try again later.');\r\n            });\r\n    }\r\n    return (\r\n        <Box\r\n            sx={{\r\n                marginTop: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                '& .MuiTextField-root': { m: 1, width: '40ch' },\r\n            }}>\r\n            <h1>Add Product</h1>\r\n            {showAlert &&\r\n                <Alert severity={alertSeverity} onClose={() => setShowAlert(false)} sx={{ mb: 2 }}>\r\n                    <AlertTitle>{alertSeverity === 'success' ? 'Success' : 'Error'}</AlertTitle>\r\n                    {alertMessage}\r\n                </Alert>\r\n            }\r\n            <Box component=\"form\"\r\n                sx={{ mt: 2, mb: 3 }}\r\n                noValidate\r\n                autoComplete=\"off\" >\r\n                <form name=\"addItem\">\r\n                    <div>\r\n                        name:\r\n                        <TextField\r\n                            id=\"newName\"\r\n                            label=\"name\"\r\n                            variant=\"outlined\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    {/* use alter name in order system */}\r\n                    <div>\r\n                        alter name:\r\n                        <TextField\r\n                            id=\"newAltName\"\r\n                            label=\"alter name\"\r\n                            variant=\"outlined\"\r\n                            value={altName}\r\n                            onChange={(e) => setAltName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        dine-in price:\r\n                        <TextField\r\n                            id=\"newDineInPrice\"\r\n                            label=\"dine in price\"\r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                                startAdornment:\r\n                                    <InputAdornment position=\"start\">$</InputAdornment>,\r\n                            }}\r\n                            value={dineInPrice}\r\n                            onChange={(e) => setDineInPrice(e.target.value)}\r\n\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        take out price:\r\n                        <TextField\r\n                            id=\"newTakeOutPrice\"\r\n                            label=\"take out price\"\r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                                startAdornment:\r\n                                    <InputAdornment position=\"start\">$</InputAdornment>,\r\n                            }}\r\n                            value={takeOutPrice}\r\n                            onChange={(e) => setTakeOutPrice(e.target.value)}\r\n\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        category:\r\n                        <TextField\r\n                            id=\"outlined-select-category\"\r\n                            select\r\n                            label=\"Select\"\r\n                            defaultValue=\"uncategorized\"\r\n                            helperText=\"Please select category\"\r\n                            value={category}\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n\r\n                        >\r\n                            {categories.map((option) => (\r\n                                <MenuItem key={option._id} value={option._id}>\r\n                                    {option.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </div>\r\n                    <div>\r\n                        food tags:\r\n                        <TextField\r\n                            id=\"outlined-select-category\"\r\n                            select\r\n                            label=\"Select\"\r\n                            defaultValue=\"uncategorized\"\r\n                            helperText=\"Please select tag of food\"\r\n                            value={foodTag}\r\n                            onChange={(e) => setFoodTag(e.target.value)}\r\n                        >\r\n                            {tags.map((option) => (\r\n                                <MenuItem key={option._id} value={option._id}>\r\n                                    {option.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </div>\r\n                    {/* <button type=\"submit\">submit</button> */}\r\n                    <Button fullWidth\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                        startIcon={<SendIcon />}\r\n                        color=\"success\"\r\n                        onClick={handleSubmit}>\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n\r\n                <Link\r\n                    variant=\"body2\"\r\n                    to=\"/admin/menu\">\r\n                    Go back to Menu\r\n                </Link>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport default AddProduct;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\detail.js",["429"],[],"import {Link, useParams} from 'react-router-dom'\r\nimport Product from '../pages/Menu';\r\n\r\nconst Detail = () => {\r\n    const {id} = useParams();\r\n    return(\r\n        <>\r\n            <h1>Product Detail</h1>\r\n            <h2>Name: </h2>\r\n            <p> price: ${id}</p>\r\n            <p> Categary: </p>\r\n            <p> Picture: </p>\r\n            <p> Description: </p>\r\n            <button>\r\n                <Link to=\"/products\">Go back</Link>\r\n            </button>\r\n        </>\r\n    )\r\n}\r\nexport default Detail;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\services\\auth.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\layout.js",["430","431"],[],"import { Outlet } from \"react-router-dom\";\r\n//components\r\nimport ResponsiveAppBar from \"./components/Navbar\";\r\nimport Copyright from './components/Copyright';\r\n// navigation\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { loginService } from \"./services/auth\";\r\n\r\nconst Layout = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [pages, setPages] = useState([]);\r\n    console.log('layout run');\r\n    useEffect(() => {\r\n        const currentPath = location.pathname;\r\n        let isLoggedIn = loginService();\r\n        if (!isLoggedIn) {\r\n            if (currentPath != '/admin/login') navigate('/admin/login');\r\n            setPages([{ 'label': 'login', value: 'admin/login' }]);\r\n        } else {\r\n            setPages([{ value: 'admin/home', label: 'Home' },\r\n            { value: 'admin/store', label: 'StoreInfo' },\r\n            { value: 'admin/menu', label: 'Menu' },\r\n            { value: 'admin/employee', label: 'Employee' },\r\n\r\n            { value: 'admin/logout', label: 'logout', }]);\r\n        }\r\n        if (currentPath == '/admin/layout') navigate('/admin/home');\r\n    }, [navigate, location, setPages]);\r\n    return (\r\n        <>\r\n            <ResponsiveAppBar pages={pages} />\r\n            <Outlet />\r\n            <Copyright sx={{ mt: 8, mb: 4 }} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout; ","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\addRole.js",["432"],[],"import React, { useState } from \"react\";\r\nimport { Link, useParams } from 'react-router-dom';\r\n//api\r\nimport axios from 'axios';\r\n//mui\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n// alert\r\nimport { Alert, AlertTitle } from '@mui/material';\r\n\r\nconst AddRole = () => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    // alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState('success');\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // handle form submit logic here\r\n        const data = { name, description };\r\n        axios.post('http://localhost:5500/staff-roles', data, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setShowAlert(true);\r\n                setAlertSeverity('success');\r\n                setAlertMessage('Role added successfully');\r\n                setName('');\r\n                setDescription('');\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setShowAlert(true);\r\n                setAlertSeverity('error');\r\n                setAlertMessage('Error adding role. Please try again later.');\r\n            });\r\n    }\r\n    return (\r\n        <Box\r\n            sx={{\r\n                marginTop: 2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                '& .MuiTextField-root': { m: 1, width: '40ch' },\r\n            }}>\r\n            <h1>Add Role</h1>\r\n            {showAlert &&\r\n                <Alert severity={alertSeverity} onClose={() => setShowAlert(false)} sx={{ mb: 2 }}>\r\n                    <AlertTitle>{alertSeverity === 'success' ? 'Success' : 'Error'}</AlertTitle>\r\n                    {alertMessage}\r\n                </Alert>\r\n            }\r\n            <Box component=\"form\"\r\n                sx={{ mt: 2, mb: 3 }}\r\n                noValidate\r\n                autoComplete=\"off\" >\r\n                <form name=\"addItem\">\r\n                    <div>\r\n                        name:\r\n                        <TextField\r\n                            id=\"roleName\"\r\n                            label=\"name\"\r\n                            variant=\"outlined\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        description:\r\n                        <TextField\r\n                            id=\"roleDescription\"\r\n                            label=\"description\"\r\n                            variant=\"outlined\"\r\n                            multiline\r\n                            minRows={4}\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Button fullWidth\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                        startIcon={<SendIcon />}\r\n                        color=\"success\"\r\n                        onClick={handleSubmit}>\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n\r\n                <Link\r\n                    variant=\"body2\"\r\n                    to=\"/admin/employee\">\r\n                    Go back to employee management page\r\n                </Link>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport default AddRole;\r\n","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\website\\pages\\homePage.js",["433","434","435","436","437","438"],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\website\\pages\\contactPage.js",["439","440"],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\website\\pages\\menuPage.js",["441","442","443"],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\website\\pages\\webFooter.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\website\\components\\webNav.js",["444","445"],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pageStaffLogin.js",["446","447","448","449","450"],[],"import * as React from 'react';\r\n// login\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n//login logo\r\nimport Avatar from '@mui/material/Avatar';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\n// mui\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nconst theme = createTheme(\r\n  {\r\n    palette: {\r\n      customColor: {\r\n        main: '#90d590', \r\n      },\r\n    },\r\n  });\r\n\r\nexport default function StaffLogin() {\r\n  const navigate = useNavigate();\r\n  const callLoginApi = (name, password) => {\r\n    var data = JSON.stringify({\r\n      \"name\": name,\r\n      \"password\": password\r\n    });\r\n\r\n    axios({\r\n      method: 'post',\r\n      maxBodyLength: Infinity,\r\n      url: 'http://localhost:5500/auth/login',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      data: data\r\n    })\r\n      .then(function (response) {\r\n        let data = response.data;\r\n        if (data.status == 200) {\r\n          localStorage.setItem('token', data.data.token);\r\n          localStorage.setItem('isLoggedIn', true);\r\n          navigate('/order/home');\r\n        } else {\r\n          alert(data.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        alert(error);\r\n      });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    callLoginApi(data.get('name'), data.get('password'));\r\n    console.log({\r\n      name: data.get('name'),\r\n      password: data.get('password'),\r\n    });\r\n  };\r\n  return (\r\n    <ThemeProvider theme={theme} >\r\n      <Container component=\"main\" maxWidth=\"xs\" >\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: '#ebc247' }}>\r\n            <LoginIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Staff Name\"\r\n              name=\"name\"\r\n              autoComplete=\"name\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              color=\"customColor\"\r\n              \r\n            >\r\n              Log In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                {/* <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link> */}\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pageOrderHistory.js",["451","452","453"],[],"import React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\n// api\r\nimport axios from 'axios';\r\n// mui - table\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { TablePagination } from '@mui/material';\r\nimport Link from '@mui/material/Link';\r\n\r\n// styles\r\nconst styles = {\r\n    container: {\r\n        margin: '40px',\r\n    },\r\n    title: {\r\n        fontSize: '24px',\r\n        fontWeight: 'bold',\r\n        marginBottom: '20px',\r\n    },\r\n    orderType: {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        backgroundColor: '#2196F3',\r\n        color: '#fff',\r\n        borderRadius: '20px',\r\n        padding: '5px 15px',\r\n        marginRight: '10px',\r\n        marginLeft: '5%',\r\n        marginRight: '5%',\r\n    },\r\n    dineIn: {\r\n        backgroundColor: '#ddb31db3',\r\n        color: '#ffffff',\r\n    },\r\n    takeOut: {\r\n        backgroundColor: '#5a965778',\r\n        color: '#ffffff',\r\n    },\r\n    phone: {\r\n        backgroundColor: '#568bc0b5',\r\n        color: '#ffffff',\r\n    },\r\n    icon: {\r\n        marginRight: '5px',\r\n    },\r\n    tableCell: {\r\n        fontWeight: 'bold',\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    server: {\r\n        fontStyle: 'italic',\r\n    },\r\n};\r\n\r\n/**\r\n * A component that displays a table of orders.\r\n */\r\nexport default function AdminOrdersHistory() {\r\n    // 10 rows a page\r\n    const [page, setPage] = React.useState(0);\r\n    const rowsPerPage = 10;\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    // change order type style\r\n    const getOrderTypeCellStyle = (orderType) => {\r\n        switch (orderType) {\r\n            case 'DineIn':\r\n                return { ...styles.orderType, ...styles.dineIn };\r\n            case 'TakeOut':\r\n                return { ...styles.orderType, ...styles.takeOut };\r\n            case 'Phone':\r\n                return { ...styles.orderType, ...styles.phone };\r\n            default:\r\n                return {};\r\n        }\r\n    };\r\n    // api\r\n    const token = localStorage.getItem('token');\r\n    const [orders, setOrders] = useState([]);\r\n    useEffect(() => {\r\n        const config = {\r\n            method: 'get',\r\n            maxBodyLength: Infinity,\r\n            url: 'http://localhost:5500/orders/todayHistory',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n            },\r\n        };\r\n\r\n        axios\r\n            .request(config)\r\n            .then((response) => {\r\n                setOrders(response.data.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, [setOrders]);\r\n    const formatTime = (timeString) => {\r\n        const time = new Date(timeString);\r\n        return time.toLocaleTimeString();\r\n      };\r\n    return (\r\n        <div style={styles.container}>\r\n            <div style={styles.title}>Orders History</div>\r\n            <TablePagination\r\n                rowsPerPageOptions={[15]}\r\n                component=\"div\"\r\n                count={orders.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n            />\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\" style={styles.tableCell}>\r\n                            Order Id\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" style={styles.tableCell}>\r\n                            Time\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" style={styles.tableCell}>\r\n                            Order Type\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" style={styles.tableCell}>\r\n                            Table\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" style={styles.tableCell}>\r\n                            Sale Amount\r\n                        </TableCell>\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {orders\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((order) => (\r\n                            <TableRow key={order._id}>\r\n                                <TableCell align=\"center\">{order._id.slice(-4)}</TableCell>\r\n                                <TableCell align=\"center\">{formatTime(order.completedTime)}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <div style={getOrderTypeCellStyle(order.orderType)}>\r\n                                        {order.orderType}\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">T{order.table}</TableCell>\r\n                                <TableCell align=\"center\">{`$${order.totalCost}`}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                </TableBody>\r\n            </Table>\r\n            <TablePagination\r\n                rowsPerPageOptions={[15]}\r\n                component=\"div\"\r\n                count={orders.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n            />\r\n            <Link color=\"primary\" href=\"/order/home\" onClick={''} sx={{ mt: 3 }}>\r\n                Back to home\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pagePhoneOrder.js",["454"],[],"import React,{useState} from 'react';\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport PhoneMenu from '../components/phoneMenu';\r\nimport PhoneDisplay from '../components/phoneDisplay';\r\n\r\n//styles\r\nconst theme = createTheme();\r\nconst styles = {\r\n    page: {\r\n        display: 'flex',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n    },\r\n    leftContainer: {\r\n        backgroundColor: '#e4e6e7',\r\n        height: '91.5vh',\r\n        color: 'black',\r\n        // display: 'inline-block',\r\n\r\n    },\r\n    rightContainer: {\r\n        // backgroundColor: '#dbba57',//dine in\r\n        // backgroundColor:'#a9d6a9', //take out\r\n        // backgroundColor: '#7bb8db', //phone\r\n        backgroundColor: '#e4e6e7',\r\n        height: '100vh',\r\n        width: '70%',\r\n        overflow: 'auto',\r\n        position: 'absolute',\r\n        transition: 'left 0.8s ease-out',\r\n    },\r\n};\r\n\r\n\r\nconst PhoneOrderPage = () => {\r\n    const [isOrderOpen, setIsOrderOpen] = useState(false);\r\n\r\n    const toggleOrderOpen = (e) => {\r\n        setIsOrderOpen(false);\r\n    };\r\n\r\n    const toggleOrderClose = (e) => {\r\n        setIsOrderOpen(true);\r\n    }\r\n    // pass data\r\n    const [data, setData] = useState([]);\r\n    const handleDataChange = (newData) =>{\r\n\r\n        let targetData = data.find(v => v._id == newData._id);\r\n        if(targetData) {\r\n            targetData.quality += 1;\r\n            setData([...data]);\r\n        } else {\r\n            let newList = [...data, newData];\r\n            setData(newList);\r\n        }\r\n        // console.log(data);\r\n    }\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={theme}>\r\n                <Grid container style={styles.page}>\r\n\r\n                    <Grid item xs={6}\r\n                        style={{\r\n                            ...styles.leftContainer,\r\n                        }}\r\n                        onClick={toggleOrderClose}\r\n                    >\r\n                        <PhoneDisplay  data={data}/>\r\n                    </Grid>\r\n                    <div\r\n                        style={{\r\n                            ...styles.rightContainer,\r\n                            right: isOrderOpen ? '-20%' : '0%',\r\n                        }}\r\n                        onClick={toggleOrderOpen}>\r\n                        <Grid item xs={12}>\r\n                            <PhoneMenu  onDataChange={handleDataChange}/>\r\n                        </Grid>\r\n                    </div>\r\n\r\n                </Grid>\r\n            </ThemeProvider>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PhoneOrderPage; ","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pageCurrentOrder.js",["455"],[],"import React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\n// api\r\nimport axios from 'axios';\r\n//mui\r\nimport Link from '@mui/material/Link';\r\nimport { Grid } from '@mui/material';\r\nimport { Card, CardHeader, CardContent } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// styles\r\nconst styles = {\r\n    page: {\r\n        paddingLeft: '2%',\r\n        paddingRight: '2%',\r\n    },\r\n    card: {\r\n        marginBottom: '5px',\r\n        boxShadow: '0px 3px 6px #666',\r\n        maxWidth: '500px',\r\n        backgroundColor: 'rgb(255,255,255,0.3)',\r\n        paddingRight: '2%',\r\n        paddingLeft: '2%',\r\n        margin: '0',\r\n    },\r\n    cardHeader: {\r\n        color: '#fff',\r\n        padding: '1%',\r\n    },\r\n    cardContent: {\r\n        padding: '0',\r\n        margin: '0',\r\n    },\r\n    itemList: {\r\n        marginTop: '1%',\r\n        marginBottom: '1%',\r\n    },\r\n    itemTotal: {\r\n        marginTop: '1%',\r\n        fontSize: '1.8rem',\r\n        fontWeight: 'bold',\r\n        textAlign: 'right',\r\n    },\r\n    majorText: {\r\n        fontSize: '1.5rem',\r\n        // fontWeight: 'bold',\r\n        textAlign: 'left',\r\n    },\r\n    infoText: {\r\n        marginTop: '1%',\r\n        fontSize: '1.1rem',\r\n        // fontWeight: 'bold',\r\n        textAlign: 'right',\r\n    },\r\n    itemLabel: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1%',\r\n    },\r\n    container: {\r\n        margin: '1%',\r\n    },\r\n    //dine in\r\n    orderSectionDI: {\r\n        margin: '5%',\r\n        backgroundColor: '#ddb31db3',\r\n        color: '#ffffff',\r\n    },\r\n\r\n    //take out\r\n    orderSectionTO: {\r\n        margin: '5%',\r\n        backgroundColor: '#5a9657b0',\r\n        color: '#ffffff',\r\n    },\r\n\r\n    //phone\r\n    orderSectionP: {\r\n        margin: '5%',\r\n        backgroundColor: '#3778c8b0',\r\n        color: '#ffffff',\r\n    },\r\n    sectionTitle: {\r\n        marginBottom: '10px',\r\n        fontWeight: 'bold',\r\n        fontSize: '1.8rem',\r\n        textAlign: 'center',\r\n    },\r\n};\r\n\r\nconst CurrentOrders = () => {\r\n    const [orders, setOrders] = useState({\r\n        dineIn: [],\r\n        takeOut: [],\r\n        phoneOrder: []\r\n    });\r\n    useEffect(() => {\r\n        const fetchOrders = async () => {\r\n            const token = localStorage.getItem('token');\r\n            const config = {\r\n                method: 'get',\r\n                maxBodyLength: Infinity,\r\n                url: 'http://localhost:5500/orders/pendingOrders',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token,\r\n                },\r\n            };\r\n\r\n            try {\r\n                const response = await axios.request(config);\r\n                setOrders(response.data.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        fetchOrders();\r\n    }, [setOrders]);\r\n    console.log(orders.dineIn);\r\n    return (\r\n        <div>\r\n            <Grid container spacing={2} style={styles.page}>\r\n                <Grid item xs={12} md={4} style={styles.dineInOrders}>\r\n                    <DineInOrders orders={orders.dineIn} />\r\n                </Grid>\r\n                <Grid item xs={12} md={4} style={styles.takeoutOrders}>\r\n                    <TakeoutOrders orders={orders.takeOut} />\r\n                </Grid>\r\n                <Grid item xs={12} md={4} style={styles.phoneOrders}>\r\n                    <PhoneOrders orders={orders.phoneOrder} />\r\n                </Grid>\r\n            </Grid>\r\n            <Link color=\"primary\" href=\"/order/home\" onClick={''} sx={{ mt: 3 }}>\r\n                Back to home\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\nexport default CurrentOrders;\r\n\r\n\r\nconst DineInOrders = ({ orders }) => {\r\n    return (\r\n        <div style={styles.orderSectionDI}>\r\n            <h2 style={styles.sectionTitle}>Dine In Orders</h2>\r\n            {orders.map((order) => (\r\n                <OrderCard  order={order} key={order._id} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TakeoutOrders = ({ orders }) => {\r\n    return (\r\n        <div style={styles.orderSectionTO}>\r\n            <h2 style={styles.sectionTitle}>Takeout Orders</h2>\r\n            {orders.map((order) => (\r\n                <OrderCard order={order} key={order._id} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst PhoneOrders = ({ orders }) => {\r\n    return (\r\n        <div style={styles.orderSectionP}>\r\n            <h2 style={styles.sectionTitle}>Phone Orders</h2>\r\n            {orders.map((order) => (\r\n                <OrderCard order={order} key={order._id} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst OrderCard = ({ order }) => {\r\n    const link = useNavigate();\r\n    let majorText ='';\r\n    let infoText = '';\r\n\r\n    if (order.orderType === 'DineIn') {\r\n        majorText = `Table ${order.table}`;\r\n        infoText = `Note: ${order.note}`;\r\n    } else if (order.orderType === 'TakeOut') {\r\n        infoText = `Note: ${order.note}`;\r\n    } else if (order.orderType === 'Phone') {\r\n        infoText = `Note: ${order.note}`;\r\n        majorText = (\r\n            <div>\r\n                <div>Name: {order.customer.name}</div>\r\n                <div>Phone: {order.customer.phone}</div>\r\n                <div>Pickup: {order.customer.pickupTime}</div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n\r\n    return (\r\n        <Card style={styles.card} onClick={() => {link(`/order/order-display/${order._id}`)}}>\r\n            <CardHeader title={` #${order._id.slice(-4)}`} style={styles.cardHeader} />\r\n            <CardContent style={styles.cardContent}>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={8}>\r\n                        <div style={styles.majorText}>{majorText}</div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <div style={styles.itemTotal}>{`$${order.totalCost.toFixed(2)}`}</div>\r\n                    </Grid>\r\n                </Grid>\r\n                <div style={styles.infoText}>{infoText}</div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\n","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\takeoutDisplay.js",["456","457","458","459","460","461","462","463","464"],[],"import React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n// api\r\nimport axios from 'axios';\r\n//mui\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport {\r\n    Table, TableContainer, TableBody,\r\n    TableCell, TableHead, TableRow, TextField, Tab\r\n} from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport { IconButton } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport LocalPrintshopTwoToneIcon from '@mui/icons-material/LocalPrintshopTwoTone';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport SafetyDividerIcon from '@mui/icons-material/SafetyDivider';\r\nimport StickyNote2TwoToneIcon from '@mui/icons-material/StickyNote2TwoTone';\r\n//drop down menu\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n//pop-up\r\nimport Popover from '@mui/material/Popover';\r\n// dialog\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { width } from '@mui/system';\r\n\r\n//style\r\nconst theme = createTheme({\r\n    palette: {\r\n        success: {\r\n            main: '#64b478',\r\n        },\r\n        secondary: {\r\n            main: '#3F51B5',\r\n        },\r\n    },\r\n});\r\nconst styles = {\r\n    space: {\r\n        paddingTop: '1%',\r\n    },\r\n    backIcon: {\r\n        paddingTop: '30%',\r\n    },\r\n    orderTypeTxt: {\r\n        fontSize: '1.5rem',\r\n        fontWeight: 'bold',\r\n\r\n        marginTop: '2%',\r\n    },\r\n    dropdownTxt: {\r\n        fontSize: '1.2rem',\r\n        marginLeft: 0,\r\n    },\r\n    dropdown: {\r\n        fontSize: '1rem',\r\n        fontWeight: 'bold',\r\n    },\r\n    table: {\r\n        height: '100%',\r\n        maxHeight: '100%',\r\n        paddingLeft: '2%',\r\n        paddingRight: '2%',\r\n    },\r\n    tableH: {\r\n        fontSize: '1.2rem',\r\n        fontWeight: 'bold',\r\n    },\r\n    tableB: {\r\n        fontSize: '1rem',\r\n    },\r\n    total: {\r\n        paddingTop: '2%',\r\n        paddingBottom: '2%',\r\n        paddingRight: '1%',\r\n        paddingLeft: '12%',\r\n    },\r\n    subtotaltxt: {\r\n        paddingTop: '5%',\r\n        paddingBottom: '1%',\r\n        border: 'none ',\r\n        fontSize: '1rem',\r\n    },\r\n    bottomBtn: {\r\n        paddingTop: '2%',\r\n        paddingBottom: '2%',\r\n        paddingLeft: '5%',\r\n        paddingRight: '0%',\r\n    },\r\n    button: {\r\n        height: '120%',\r\n        width: '100%',\r\n        marginLeft: '8%',\r\n        fontSize: '20px',\r\n        color: '#fff',\r\n    },\r\n    iconButton: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    icon: {\r\n        fontSize: '3rem',\r\n    },\r\n    iconBtnTXT: {\r\n        variant: 'caption',\r\n        textAlign: 'center',\r\n    },\r\n};\r\n// data\r\n\r\nconst tables = [\r\n    { label: 'Table 0', value: '0' },\r\n    { label: 'Table 1', value: '1' },\r\n    { label: 'Table 2', value: '2' },\r\n    { label: 'Table 3', value: '3' },\r\n    { label: 'Table 4', value: '4' },\r\n    { label: 'Table 5', value: '5' },\r\n    { label: 'Table 6', value: '6' },\r\n    { label: 'Table 7', value: '7' },\r\n    { label: 'Table 8', value: '8' },\r\n    { label: 'Table 9', value: '9' },\r\n    { label: 'Table 10', value: '10' },\r\n];\r\n\r\n// default export \r\nconst TakeoutDisplay = (props) => {\r\n    // back button\r\n    const link = useNavigate();\r\n    const handleBackClick = () => {\r\n        link('/order/home');\r\n    };\r\n    // drop down - table\r\n    const [selectedTable, setSelectedTable] = useState(tables[0].value);\r\n    const handleTableChange = (event) => {\r\n        setSelectedTable(event.target.value);\r\n    };\r\n    // calculate subtotal\r\n    let defaultTotal = 0;\r\n    let tax = 0;\r\n    let total = 0;\r\n    const getTotal = () => {\r\n        if (props.data.length <= 0) return `${defaultTotal.toFixed(2)}`;\r\n        props.data.forEach(v => {\r\n            defaultTotal += v.quality * v.dineInPrice;\r\n        });\r\n        return `${defaultTotal.toFixed(2)}`;\r\n    }\r\n\r\n    const getTax = () => {\r\n        tax = Math.floor(defaultTotal * 13 / 100);\r\n        return `${tax.toFixed(2)}`;\r\n    }\r\n\r\n    const getTaxAndTotal = () => {\r\n        total = defaultTotal + tax;\r\n        return `${total.toFixed(2)}`;\r\n    }\r\n\r\n\r\n    // Button Note: dialog\r\n    const [noteValue, setNoteValue] = useState('');\r\n    const [Dialogopen, setDialogOpen] = useState(false);\r\n    // open\r\n    const handleNoteClickOpen = () => {\r\n        setDialogOpen(true);\r\n    };\r\n    // save note data\r\n    const handleNoteChange = (event) => {\r\n        setNoteValue(event.target.value);\r\n    };\r\n    const handleNoteSave = () => {\r\n        setNoteValue(noteValue);\r\n        setDialogOpen(false);\r\n    };\r\n    // close\r\n    const handleNoteClose = () => {\r\n        setNoteValue('');\r\n        setDialogOpen(false);\r\n    };\r\n\r\n\r\n    // bottom buttons\r\n    const totalCostRef = useRef(null);\r\n    const taxRef = useRef(null);\r\n    const beforeTaxRef = useRef(null);\r\n\r\n    const orderPrint = () => {\r\n        // get order data\r\n        let cusName = '';\r\n        let cusPhone = '';\r\n        let pickupTime = '';\r\n        let totalCost = parseFloat(totalCostRef.current?.textContent);\r\n        let taxCost = parseFloat(taxRef.current?.textContent);\r\n        let beforeTaxCost = parseFloat(beforeTaxRef.current?.textContent);\r\n        console.log(totalCost);\r\n        const order = {\r\n            orderType: 'TakeOut',\r\n            table: null,\r\n            totalCost: totalCost,\r\n            tax: taxCost,\r\n            beforeTax: beforeTaxCost,\r\n            food: props.data,\r\n            note: noteValue,\r\n            customer: {\r\n                name: cusName,\r\n                phone: cusPhone,\r\n                pickUpTime: pickupTime,\r\n            }\r\n        };\r\n        console.log(order);\r\n        //api\r\n        const token = localStorage.getItem('token');\r\n        let data = order;\r\n        let config = {\r\n            method: 'post',\r\n            maxBodyLength: Infinity,\r\n            url: 'http://localhost:5500/orders',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data: data\r\n        };\r\n\r\n        axios.request(config)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                console.log(token);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n            link('/order/home');\r\n    }\r\n    const orderDone = () => {\r\n\r\n    }\r\n    const orderPaid = () => {\r\n\r\n    }\r\n    // pop-up window: New Feature Coming Soon!\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <div>\r\n            <ThemeProvider theme={theme}>\r\n\r\n                {/* Head: Order Head */}\r\n                <Grid container>\r\n                    {/* back icon */}\r\n                    <Grid item xs={5} >\r\n                        <IconButton\r\n                            onClick={handleBackClick}>\r\n                            <ArrowBackIosNewIcon\r\n                                style={styles.backIcon} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    {/* Head: Order Type:  Dine in */}\r\n                    <Grid item xs={5} style={styles.orderTypeTxt} >\r\n                        Take Out\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                {/* phone order only */}\r\n                {/* <Grid container>\r\n                    <Grid item xs={4} >\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            id=\"cusName\" name=\"cusName\"\r\n                            label=\"Customer Name\"\r\n                            autoComplete=\"name\"\r\n                            autoFocus\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={3} >\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            id=\"cusPhone\" name=\"cusPhone\"\r\n                            label=\"Phone\"\r\n                            autoComplete=\"phone\"\r\n                            autoFocus\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={5} >\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            id=\"pickupTime\" name=\"pickupTime\"\r\n                            label=\"Pick Up Time\"\r\n                            autoComplete=\"time\"\r\n                            autoFocus\r\n                        />\r\n                    </Grid>\r\n                </Grid> */}\r\n                {/* Order detail list */}\r\n                <Grid container>\r\n                    <Grid item xs={12}\r\n                        style={styles.table}>\r\n                        <TableContainer\r\n                            component={Paper}\r\n                            style={{ height: '45vh' }}>\r\n\r\n                            <Table size=\"small\" >\r\n                                <TableHead\r\n                                    style={{ position: 'sticky', top: 0 }}>\r\n                                    <TableRow>\r\n                                        <TableCell style={styles.tableH}>Item</TableCell>\r\n                                        <TableCell style={styles.tableH} align=\"left\">Quantity</TableCell>\r\n                                        <TableCell style={styles.tableH}>Price</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n\r\n                                <TableBody>\r\n                                    {props.data && props.data.length > 0 && props.data.map((v) => (\r\n                                        <TableRow>\r\n                                            <TableCell style={styles.tableB}>{v.altName}</TableCell>\r\n                                            <TableCell style={{ ...styles.tableB, paddingRight: '15%' }} align=\"center\">{v.quality}</TableCell>\r\n                                            <TableCell style={{ ...styles.tableB, paddingRight: '15%' }} align=\"center\">{v.dineInPrice * v.quality}</TableCell>\r\n                                            {/* <TableCell style={styles.tableB} align=\"center\">{v.total}</TableCell> */}\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* Note & Order subtotal list */}\r\n                <Grid container >\r\n                    {/* Note Display Here */}\r\n                    <Grid item xs={5} >\r\n                        <p style={{ marginLeft: '7%', fontWeight: 'bold' }}>Note: </p>\r\n                        <p style={{\r\n                            maxWidth: '40rem', wordWrap: 'break-word',\r\n                            maxHeight: '4rem', overflow: 'scroll',\r\n                            marginLeft: '7%'\r\n                        }}>\r\n                            {noteValue}\r\n                        </p>\r\n                    </Grid>\r\n                    {/* Subtotal */}\r\n                    <Grid item xs={7} style={styles.total}>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ ...styles.subtotaltxt, fontWeight: 'bold' }}\r\n                                align=\"right\">\r\n                                Sub Total:\r\n                            </TableCell>\r\n                            <TableCell\r\n                                ref={beforeTaxRef}\r\n                                style={styles.subtotaltxt}\r\n                                align=\"right\">\r\n                                {getTotal()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ ...styles.subtotaltxt, fontWeight: 'bold' }}\r\n                                align=\"right\">\r\n                                Tax(13%):\r\n                            </TableCell>\r\n                            <TableCell\r\n                                ref={taxRef}\r\n                                style={styles.subtotaltxt}\r\n                                align=\"right\">\r\n                                {getTax()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ ...styles.subtotaltxt, fontWeight: 'bold' }}\r\n                                align=\"right\">\r\n                                Total:  $\r\n                            </TableCell>\r\n                            <TableCell\r\n                                ref={totalCostRef}\r\n                                style={styles.subtotaltxt}\r\n                                align=\"right\">\r\n                                {getTaxAndTotal()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* buttons */}\r\n                <Grid container style={styles.bottomBtn}>\r\n                    {/* Print */}\r\n                    <Grid item xs={3} >\r\n                        <IconButton style={styles.iconButton}\r\n                            onClick={orderPrint}>\r\n                            <LocalPrintshopTwoToneIcon style={styles.icon} />\r\n                            <Typography style={styles.iconBtnTXT}>\r\n                                Print\r\n                            </Typography>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    {/* Note */}\r\n                    <Grid item xs={3} >\r\n                        <IconButton style={styles.iconButton}\r\n                            onClick={handleNoteClickOpen}>\r\n                            <StickyNote2TwoToneIcon style={styles.icon} />\r\n                            <Typography style={styles.iconBtnTXT}>\r\n                                Note\r\n                            </Typography>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    {/* Edit - Coming Soon*/}\r\n                    <Grid item xs={3} >\r\n                        <IconButton style={styles.iconButton}\r\n                            onClick={handleClick}>\r\n                            <EditTwoToneIcon style={styles.icon} />\r\n                            <Typography style={styles.iconBtnTXT}>\r\n                                Edit\r\n                            </Typography>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    {/* Separate - Coming Soon*/}\r\n                    <Grid item xs={3} >\r\n                        <IconButton style={styles.iconButton}\r\n                            onClick={handleClick}>\r\n                            <SafetyDividerIcon style={styles.icon} />\r\n                            <Typography style={styles.iconBtnTXT}>\r\n                                Separate\r\n                            </Typography>\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* Buttons: Done-order status & Pay-pmy status */}\r\n                {/* <Grid container style={styles.space}>\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            onClick={orderDone}\r\n                            style={styles.button}\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            color='success'\r\n                        >\r\n                            Done\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <Button\r\n                            onClick={orderPaid}\r\n                            style={styles.button}\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                        >\r\n                            Pay &nbsp;&nbsp; $ {getTaxAndTotal()}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid> */}\r\n            </ThemeProvider>\r\n\r\n            {/* Pop-up Window */}\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <Typography sx={{ p: 2 }}>New Feature Coming Soon!</Typography>\r\n            </Popover>\r\n\r\n            {/* Dialog Window */}\r\n            <Dialog open={Dialogopen} onClose={handleNoteClose}>\r\n                <DialogTitle>Note</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Leave a note of this order:\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        multiline\r\n                        rows={4}\r\n                        variant=\"standard\"\r\n                        value={noteValue}\r\n                        onChange={handleNoteChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleNoteClose}>Cancel</Button>\r\n                    <Button onClick={handleNoteSave}>Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TakeoutDisplay;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\takeoutMenu.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pageDineInOrder.js",["465","466","467"],[],"import React, { useState, useEffect } from 'react';\r\n// api\r\nimport axios from 'axios';\r\n//mui\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport DineInDisplay from '../components/dineInDisplay';\r\nimport DineInMenu from '../components/dineInMenu';\r\n\r\n//styles\r\nconst theme = createTheme();\r\nconst styles = {\r\n    page: {\r\n        display: 'flex',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n    },\r\n    leftContainer: {\r\n        backgroundColor: '#e4e6e7',\r\n        height: '91.5vh',\r\n        color: 'black',\r\n        // display: 'inline-block',\r\n\r\n    },\r\n    rightContainer: {\r\n        // backgroundColor: '#dbba57',//dine in\r\n        // backgroundColor:'#a9d6a9', //take out\r\n        // backgroundColor: '#7bb8db', //phone\r\n        backgroundColor: '#e4e6e7',\r\n        height: '100vh',\r\n        width: '70%',\r\n        overflow: 'auto',\r\n        position: 'absolute',\r\n        transition: 'left 0.8s ease-out',\r\n    },\r\n};\r\n\r\n\r\nconst PageDineInOrder = () => {\r\n    const [isOrderOpen, setIsOrderOpen] = useState(false);\r\n\r\n    const toggleOrderOpen = (e) => {\r\n        setIsOrderOpen(false);\r\n    };\r\n\r\n    const toggleOrderClose = (e) => {\r\n        setIsOrderOpen(true);\r\n    }\r\n\r\n    // pass data\r\n    const [data, setData] = useState([]);\r\n    const handleDataChange = (newData) =>{\r\n\r\n        let targetData = data.find(v => v._id == newData._id);\r\n        if(targetData) {\r\n            targetData.quality += 1;\r\n            setData([...data]);\r\n        } else {\r\n            let newList = [...data, newData];\r\n            setData(newList);\r\n        }\r\n        // console.log(data);\r\n    }\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={theme}>\r\n                <Grid container style={styles.page}>\r\n\r\n                    <Grid item xs={6}\r\n                        style={{\r\n                            ...styles.leftContainer,\r\n                        }}\r\n                        onClick={toggleOrderClose}\r\n                    >\r\n                        <DineInDisplay  data={data}/>\r\n                    </Grid>\r\n                    <div\r\n                        style={{\r\n                            ...styles.rightContainer,\r\n                            right: isOrderOpen ? '-20%' : '0%',\r\n                        }}\r\n                        onClick={toggleOrderOpen}>\r\n                        <Grid item xs={12}>\r\n                            <DineInMenu  onDataChange={handleDataChange}/>\r\n                        </Grid>\r\n                    </div>\r\n\r\n                </Grid>\r\n            </ThemeProvider>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PageDineInOrder; ","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\index.js",["468","469","470"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n// api\r\nimport axios from 'axios';\r\n//mui\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport ButtonBase from '@mui/material/ButtonBase';\r\nimport RestaurantIcon from '@mui/icons-material/Restaurant';\r\nimport TakeoutDiningIcon from '@mui/icons-material/TakeoutDining';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport TableBarIcon from '@mui/icons-material/TableBar';\r\nimport ReceiptLongIcon from '@mui/icons-material/ReceiptLong';\r\nimport ManageHistoryIcon from '@mui/icons-material/ManageHistory';\r\nimport { green, red } from '@mui/material/colors';\r\nimport Box from '@mui/material/Box';\r\n\r\n\r\nconst theme = createTheme();\r\n// styles\r\nconst styles = {\r\n    page: {\r\n        display: 'flex',\r\n        height: '91.5vh',\r\n        flexDirection: 'column',\r\n        backgroundColor: '#b3b3b3',\r\n        // margin:0,\r\n    },\r\n    buttonWrapper: {\r\n\r\n    },\r\n    button: {\r\n        marginRight: '3.5%',\r\n        marginLeft: '3.5%',\r\n        marginTop: '5%',\r\n        marginBottom: '5%',\r\n        height: '200px',\r\n        width: '300px',\r\n        borderRadius: '50px',\r\n        backgroundColor: '#e6e6e6',\r\n        boxShadow: 'rgb(115，115，115，0.3) 0px 3px 6px 3px',\r\n    },\r\n    icon: {\r\n        paddingLeft: '5%',\r\n        fontSize: '5rem',\r\n    },\r\n    buttonText: {\r\n        paddingTop: '15%',\r\n        paddingBottom: '15%',\r\n        paddingRight: '5%',\r\n        fontSize: '2.5rem',\r\n        marginTop: '1%',\r\n        color: '#262626',\r\n    },\r\n};\r\n//data\r\nconst pages = [\r\n    { label: 'Dine In', value: 'handleDineInOrderClick', color: '#e8ba30', icon: 'HistoryIcon style={styles.icon} ' },\r\n    { label: 'Take Out', value: 'handleTakeoutOrderClick', color: '#538cc6', icon: 'HistoryIcon style={styles.icon} ' },\r\n    { label: 'Current Orders', value: 'handleCurrentOrdersClick', color: '#53c653', icon: 'HistoryIcon style={styles.icon} ' },\r\n    { label: 'Order History', value: 'handleOrdersHistoryClick', color: '#a6a6a6', icon: 'HistoryIcon style={styles.icon} ' },\r\n];\r\n\r\n// Home page of order system\r\nconst OrderHome = () => {\r\n    // navigation\r\n    const link = useNavigate();\r\n    const handleDineInOrderClick = () => {\r\n        link('/order/dine-in-order');\r\n    };\r\n    const handleTakeoutOrderClick = () => {\r\n        link('/order/take-out-order');\r\n    };\r\n    const handlePhoneOrderClick = () => {\r\n        link('/order/phone-order');\r\n    };\r\n    const handleCurrentOrdersClick = () => {\r\n        link('/order/current-orders');\r\n    };\r\n    const handleOrdersHistoryClick = () => {\r\n        link('/order/orders-history');\r\n    };\r\n    const [tables, setTables] = useState([]);\r\n\r\n    const token = localStorage.getItem('token');\r\n  \r\n    useEffect(() => {\r\n      const config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: 'http://localhost:5500/tables',\r\n        headers: {\r\n          'Authorization': 'Bearer ' + token,\r\n        },\r\n      };\r\n  \r\n      axios\r\n        .request(config)\r\n        .then((response) => {\r\n            setTables(response.data.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }, [setTables]);\r\n    // get table list\r\n    const availableTables = tables && tables.filter(table => table.tableStatus === 'available');\r\n    const usedTables = tables && tables.filter(table => table.tableStatus === 'used');\r\n    // count number\r\n    const numAvailableTables = availableTables.length;\r\n    const numUsedTables = usedTables.length;\r\n    return (\r\n        <div style={styles.page}>\r\n            <ThemeProvider theme={theme} >\r\n                <div style={styles.buttonWrapper}>\r\n                    {/* Dine In/Take Out/ Phone Order */}\r\n                    <ButtonBase\r\n                        style={styles.button}\r\n                        onClick={handleDineInOrderClick}>\r\n                        <RestaurantIcon\r\n                            style={{\r\n                                ...styles.icon,\r\n                                color: '#dbba57'\r\n                            }} />\r\n                        <div style={styles.buttonText}>\r\n                            Dine In Order\r\n                        </div>\r\n                    </ButtonBase>\r\n                    <ButtonBase\r\n                        style={styles.button}\r\n                        onClick={handleTakeoutOrderClick}>\r\n                        <TakeoutDiningIcon\r\n                            style={{\r\n                                ...styles.icon,\r\n                                color: '#64b4a0'\r\n                            }}\r\n                        />\r\n                        <div style={styles.buttonText}>\r\n                            Take Out Order\r\n                        </div>\r\n                    </ButtonBase>\r\n                    <ButtonBase\r\n                        style={styles.button}\r\n                        onClick={handlePhoneOrderClick}>\r\n                        <CallIcon\r\n                            style={{\r\n                                ...styles.icon,\r\n                                color: '#6478b4'\r\n                            }}\r\n                        />\r\n                        <div style={styles.buttonText}>\r\n                            Phone Order\r\n                        </div>\r\n                    </ButtonBase>\r\n                </div>\r\n                {/* 2nd line: Avaliable Tables/Current/History */}\r\n                <div style={styles.buttonWrapper}>\r\n                    {/* Avaliable Tables */}\r\n                    <ButtonBase style={styles.button}>\r\n                        <TableBarIcon\r\n                            style={{ ...styles.icon, color: '#d6a9a9', }}\r\n                        />\r\n                        <div style={{ fontSize: '1.2rem', fontWeight: 'bold', color: '#737373' }}>\r\n                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                <Box>\r\n                                    <div>Available tables:</div>\r\n                                    <div style={{ color: green[500] }}>{numAvailableTables}</div>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\r\n                                <Box>\r\n                                    <div >Ordered tables:</div>\r\n                                    <div style={{ color: red[500] }}>{numUsedTables}</div>\r\n                                </Box>\r\n                            </Box>\r\n                        </div>\r\n                    </ButtonBase>\r\n                    {/* Current Orders */}\r\n                    <ButtonBase\r\n                        style={styles.button}\r\n                        onClick={handleCurrentOrdersClick}>\r\n                        <ReceiptLongIcon\r\n                            style={{\r\n                                ...styles.icon,\r\n                                color: '#a0b464'\r\n                            }}\r\n                        />\r\n                        <div style={styles.buttonText}>\r\n                            Current Orders\r\n                        </div>\r\n                    </ButtonBase>\r\n                    {/* Order History */}\r\n                    <ButtonBase\r\n                        style={styles.button}\r\n                        onClick={handleOrdersHistoryClick}>\r\n                        <ManageHistoryIcon\r\n                            style={{\r\n                                ...styles.icon,\r\n                                color: '#737373'\r\n                            }}\r\n                        />\r\n                        <div style={styles.buttonText}>\r\n                            Order History\r\n                        </div>\r\n                    </ButtonBase>\r\n                </div>\r\n            </ThemeProvider >\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default OrderHome;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\nav.js",["471"],[],"import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// mui\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SetMealIcon from '@mui/icons-material/SetMeal';\r\n//style\r\nconst styles= {\r\n nav:{\r\n  backgroundColor: '#4d4d4d',\r\n },\r\n};\r\n//data\r\nconst pages = [\r\n\r\n];\r\n\r\nfunction OrderNav(props) {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const clickPage = (page = 'default') => {\r\n    // alert(page);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" style={styles.nav}>\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <SetMealIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"/\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'none', md: 'flex' },\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            RFH Order System\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {props.pages && props.pages.map((page) => (\r\n                <MenuItem key={page.value} onClick={clickPage}>\r\n                  <Typography textAlign=\"center\">{page.label}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n\r\n          <SetMealIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'flex', md: 'none' },\r\n              flexGrow: 1,\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            RFH Management Panel\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            { props.pages && props.pages.map((page)=> (\r\n\r\n              <Link to={`/${page.value}`}>\r\n                <Button\r\n                  key={page}\r\n                  // onClick={() => clickPage(page)}\r\n                  sx={{ my: 2, color: 'white', display: 'block' }}\r\n                >\r\n                  {page.label}\r\n                </Button>\r\n              </Link>\r\n\r\n            ))}\r\n          </Box>\r\n\r\n\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default OrderNav;\r\n","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\dineInDisplay.js",["472","473","474","475","476","477"],[],"import React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n// api\r\nimport axios from 'axios';\r\n//mui\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport {\r\n    Table, TableContainer, TableBody,\r\n    TableCell, TableHead, TableRow, TextField, Tab\r\n} from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport { IconButton } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport LocalPrintshopTwoToneIcon from '@mui/icons-material/LocalPrintshopTwoTone';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport SafetyDividerIcon from '@mui/icons-material/SafetyDivider';\r\nimport StickyNote2TwoToneIcon from '@mui/icons-material/StickyNote2TwoTone';\r\n//drop down menu\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n//pop-up\r\nimport Popover from '@mui/material/Popover';\r\n// dialog\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { width } from '@mui/system';\r\n\r\n//style\r\nconst theme = createTheme({\r\n    palette: {\r\n        success: {\r\n            main: '#64b478',\r\n        },\r\n        secondary: {\r\n            main: '#3F51B5',\r\n        },\r\n    },\r\n});\r\nconst styles = {\r\n    space: {\r\n        paddingTop: '1%',\r\n    },\r\n    backIcon: {\r\n        paddingTop: '30%',\r\n    },\r\n    orderTypeTxt: {\r\n        fontSize: '1.5rem',\r\n        fontWeight: 'bold',\r\n\r\n        marginTop: '2%',\r\n    },\r\n    dropdownTxt: {\r\n        fontSize: '1.2rem',\r\n        marginLeft: 0,\r\n    },\r\n    dropdown: {\r\n        fontSize: '1rem',\r\n        fontWeight: 'bold',\r\n    },\r\n    table: {\r\n        height: '100%',\r\n        maxHeight: '100%',\r\n        paddingLeft: '2%',\r\n        paddingRight: '2%',\r\n    },\r\n    tableH: {\r\n        fontSize: '1.2rem',\r\n        fontWeight: 'bold',\r\n    },\r\n    tableB: {\r\n        fontSize: '1rem',\r\n    },\r\n    total: {\r\n        paddingTop: '2%',\r\n        paddingBottom: '2%',\r\n        paddingRight: '1%',\r\n        paddingLeft: '12%',\r\n    },\r\n    subtotaltxt: {\r\n        paddingTop: '5%',\r\n        paddingBottom: '1%',\r\n        border: 'none ',\r\n        fontSize: '1rem',\r\n    },\r\n    bottomBtn: {\r\n        paddingTop: '2%',\r\n        paddingBottom: '2%',\r\n        paddingLeft: '5%',\r\n        paddingRight: '0%',\r\n    },\r\n    button: {\r\n        height: '120%',\r\n        width: '100%',\r\n        marginLeft: '8%',\r\n        fontSize: '20px',\r\n        color: '#fff',\r\n    },\r\n    iconButton: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    icon: {\r\n        fontSize: '3rem',\r\n    },\r\n    iconBtnTXT: {\r\n        variant: 'caption',\r\n        textAlign: 'center',\r\n    },\r\n};\r\n// data\r\n\r\nconst tables = [\r\n    { label: 'Table 0', value: '0' },\r\n    { label: 'Table 1', value: '1' },\r\n    { label: 'Table 2', value: '2' },\r\n    { label: 'Table 3', value: '3' },\r\n    { label: 'Table 4', value: '4' },\r\n    { label: 'Table 5', value: '5' },\r\n    { label: 'Table 6', value: '6' },\r\n    { label: 'Table 7', value: '7' },\r\n    { label: 'Table 8', value: '8' },\r\n    { label: 'Table 9', value: '9' },\r\n    { label: 'Table 10', value: '10' },\r\n];\r\n\r\n// default export TakeoutDisplay\r\nconst DineInDisplay = (props) => {\r\n    // back button\r\n    const link = useNavigate();\r\n    const handleBackClick = () => {\r\n        link('/order/home');\r\n    };\r\n\r\n    // Table Numbers\r\n    const token = localStorage.getItem('token');\r\n\r\n    const [tables, setTables] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const config = {\r\n            method: 'get',\r\n            maxBodyLength: Infinity,\r\n            url: 'http://localhost:5500/tables',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n            },\r\n        };\r\n\r\n        axios\r\n            .request(config)\r\n            .then((response) => {\r\n                setTables(response.data.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, [setTables]);\r\n    // get table list\r\n    const availableTables = tables.filter(table => table.tableStatus === 'available');\r\n    const availableTableNumbers = availableTables.map(table => table.tableNumber);\r\n\r\n    // drop down - table\r\n    const [selectedTable, setSelectedTable] = useState(tables[0]?.tableNumber);\r\n\r\n    const handleTableChange = (event) => {\r\n        setSelectedTable(event.target.value);\r\n    };\r\n    // calculate subtotal\r\n    let defaultTotal = 0;\r\n    let tax = 0;\r\n    let total = 0;\r\n    const getTotal = () => {\r\n        if (props.data.length <= 0) return `${defaultTotal.toFixed(2)}`;\r\n        props.data.forEach(v => {\r\n            defaultTotal += v.quality * v.dineInPrice;\r\n        });\r\n        return `${defaultTotal.toFixed(2)}`;\r\n    }\r\n\r\n    const getTax = () => {\r\n        tax = Math.floor(defaultTotal * 13 / 100);\r\n        return `${tax.toFixed(2)}`;\r\n    }\r\n\r\n    const getTaxAndTotal = () => {\r\n        total = defaultTotal + tax;\r\n        return `${total.toFixed(2)}`;\r\n    }\r\n\r\n\r\n    // Button Note: dialog\r\n    const [noteValue, setNoteValue] = useState('');\r\n    const [Dialogopen, setDialogOpen] = useState(false);\r\n    // open\r\n    const handleNoteClickOpen = () => {\r\n        setDialogOpen(true);\r\n    };\r\n    // save note data\r\n    const handleNoteChange = (event) => {\r\n        setNoteValue(event.target.value);\r\n    };\r\n    const handleNoteSave = () => {\r\n        setNoteValue(noteValue);\r\n        setDialogOpen(false);\r\n    };\r\n    // close\r\n    const handleNoteClose = () => {\r\n        setNoteValue('');\r\n        setDialogOpen(false);\r\n    };\r\n\r\n\r\n    // bottom buttons\r\n    // Print Button - create order\r\n    const totalCostRef = useRef(null);\r\n    const taxRef = useRef(null);\r\n    const beforeTaxRef = useRef(null);\r\n\r\n    const orderPrint = () => {\r\n        // get order data\r\n        let totalCost = parseFloat(totalCostRef.current?.textContent);\r\n        let taxCost = parseFloat(taxRef.current?.textContent);\r\n        let beforeTaxCost = parseFloat(beforeTaxRef.current?.textContent);\r\n\r\n        const order = {\r\n            orderType: 'DineIn',\r\n            table: parseFloat(selectedTable),\r\n            totalCost: totalCost,\r\n            tax: taxCost,\r\n            beforeTax: beforeTaxCost,\r\n            food: props.data,\r\n            note: noteValue,\r\n            customer: null,\r\n        };\r\n        console.log(order);\r\n        //api\r\n        let data = order;\r\n\r\n        let config = {\r\n            method: 'post',\r\n            maxBodyLength: Infinity,\r\n            url: 'http://localhost:5500/orders',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data: data\r\n        };\r\n\r\n        axios.request(config)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                console.log(token);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n            link('/order/home');\r\n    }\r\n\r\n\r\n    // button done & pay\r\n    const orderDone = () => {\r\n\r\n    }\r\n    const orderPaid = () => {\r\n\r\n    }\r\n    // pop-up window: New Feature Coming Soon!\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <div>\r\n            <ThemeProvider theme={theme}>\r\n\r\n                {/* Head: Order Head */}\r\n                <Grid container>\r\n                    {/* back icon */}\r\n                    <Grid item xs={4} >\r\n                        <IconButton\r\n                            onClick={handleBackClick}>\r\n                            <ArrowBackIosNewIcon\r\n                                style={styles.backIcon} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    {/* Head: Order Type:  Dine in */}\r\n                    <Grid item xs={5} style={styles.orderTypeTxt} >\r\n                        Dine-In\r\n                    </Grid>\r\n                    {/* Head: Table Number */}\r\n                    <Grid item xs={3} style={styles.dropdownTxt}>\r\n                        Table:\r\n                        <Select\r\n                            style={styles.dropdown}\r\n                            value={selectedTable}\r\n                            onChange={handleTableChange}\r\n                        >\r\n                            {availableTableNumbers.map((t) => (\r\n                                <MenuItem key={t} value={t}>\r\n                                    {t}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* Order detail list */}\r\n                <Grid container>\r\n                    <Grid item xs={12}\r\n                        style={styles.table}>\r\n                        <TableContainer\r\n                            component={Paper}\r\n                            style={{ height: '45vh' }}>\r\n\r\n                            <Table size=\"small\" >\r\n                                <TableHead\r\n                                    style={{ position: 'sticky', top: 0 }}>\r\n                                    <TableRow>\r\n                                        <TableCell style={styles.tableH}>Item</TableCell>\r\n                                        <TableCell style={styles.tableH} align=\"left\">Quantity</TableCell>\r\n                                        <TableCell style={styles.tableH}>Price</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n\r\n                                <TableBody>\r\n                                    {props.data && props.data.length > 0 && props.data.map((v) => (\r\n                                        <TableRow>\r\n                                            <TableCell style={styles.tableB}>{v.altName}</TableCell>\r\n                                            <TableCell style={{ ...styles.tableB, paddingRight: '15%' }} align=\"center\">{v.quality}</TableCell>\r\n                                            <TableCell style={{ ...styles.tableB, paddingRight: '15%' }} align=\"center\">{v.dineInPrice * v.quality}</TableCell>\r\n                                            {/* <TableCell style={styles.tableB} align=\"center\">{v.total}</TableCell> */}\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* Note & Order subtotal list */}\r\n                <Grid container >\r\n                    {/* Note Display Here */}\r\n                    <Grid item xs={5} >\r\n                        <p style={{ marginLeft: '7%', fontWeight: 'bold' }}>Note: </p>\r\n                        <p style={{\r\n                            maxWidth: '40rem', wordWrap: 'break-word',\r\n                            maxHeight: '4rem', overflow: 'scroll',\r\n                            marginLeft: '7%'\r\n                        }}>\r\n                            {noteValue}\r\n                        </p>\r\n                    </Grid>\r\n                    {/* Subtotal */}\r\n                    <Grid item xs={7} style={styles.total}>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ ...styles.subtotaltxt, fontWeight: 'bold' }}\r\n                                align=\"right\">\r\n                                Sub Total:\r\n                            </TableCell>\r\n                            <TableCell\r\n                                ref={beforeTaxRef}\r\n                                style={styles.subtotaltxt}\r\n                                align=\"right\">\r\n                                {getTotal()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ ...styles.subtotaltxt, fontWeight: 'bold' }}\r\n                                align=\"right\">\r\n                                Tax(13%):\r\n                            </TableCell>\r\n                            <TableCell\r\n                                ref={taxRef}\r\n                                style={styles.subtotaltxt}\r\n                                align=\"right\">\r\n                                {getTax()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ ...styles.subtotaltxt, fontWeight: 'bold' }}\r\n                                align=\"right\">\r\n                                Total:  $\r\n                            </TableCell>\r\n                            <TableCell\r\n                                ref={totalCostRef}\r\n                                style={styles.subtotaltxt}\r\n                                align=\"right\">\r\n                                {getTaxAndTotal()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* buttons */}\r\n                <Grid container style={styles.bottomBtn}>\r\n                    {/* Print */}\r\n                    <Grid item xs={3} >\r\n                        <IconButton style={styles.iconButton}\r\n                            onClick={orderPrint}>\r\n                            <LocalPrintshopTwoToneIcon style={styles.icon} />\r\n                            <Typography style={styles.iconBtnTXT}>\r\n                                Print\r\n                            </Typography>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    {/* Note */}\r\n                    <Grid item xs={3} >\r\n                        <IconButton style={styles.iconButton}\r\n                            onClick={handleNoteClickOpen}>\r\n                            <StickyNote2TwoToneIcon style={styles.icon} />\r\n                            <Typography style={styles.iconBtnTXT}>\r\n                                Note\r\n                            </Typography>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    {/* Edit - Coming Soon*/}\r\n                    <Grid item xs={3} >\r\n                        <IconButton style={styles.iconButton}\r\n                            onClick={handleClick}>\r\n                            <EditTwoToneIcon style={styles.icon} />\r\n                            <Typography style={styles.iconBtnTXT}>\r\n                                Edit\r\n                            </Typography>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    {/* Separate - Coming Soon*/}\r\n                    <Grid item xs={3} >\r\n                        <IconButton style={styles.iconButton}\r\n                            onClick={handleClick}>\r\n                            <SafetyDividerIcon style={styles.icon} />\r\n                            <Typography style={styles.iconBtnTXT}>\r\n                                Separate\r\n                            </Typography>\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* Buttons: Done-order status & Pay-pmy status */}\r\n                {/* <Grid container style={styles.space}>\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            onClick={orderDone}\r\n                            style={styles.button}\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            color='success'\r\n                        >\r\n                            Done\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <Button\r\n                            onClick={orderPaid}\r\n                            style={styles.button}\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                        >\r\n                            Pay &nbsp;&nbsp; $ {getTaxAndTotal()}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid> */}\r\n            </ThemeProvider>\r\n\r\n            {/* Pop-up Window */}\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <Typography sx={{ p: 2 }}>New Feature Coming Soon!</Typography>\r\n            </Popover>\r\n\r\n            {/* Dialog Window */}\r\n            <Dialog open={Dialogopen} onClose={handleNoteClose}>\r\n                <DialogTitle>Note</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Leave a note of this order:\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        multiline\r\n                        rows={4}\r\n                        variant=\"standard\"\r\n                        value={noteValue}\r\n                        onChange={handleNoteChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleNoteClose}>Cancel</Button>\r\n                    <Button onClick={handleNoteSave}>Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default DineInDisplay;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\dineInMenu.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\addEmployee.js",["478","479","480","481"],[],"import React , { useState ,useEffect}from \"react\";\r\nimport { Link, useParams } from 'react-router-dom'\r\n//api\r\nimport axios from 'axios';\r\n//mui\r\nimport Box from '@mui/material/Box';\r\nimport MenuItem from '@mui/material/IconButton';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n// alert\r\nimport { Alert, AlertTitle } from '@mui/material';\r\n\r\n//styles\r\nconst styles = {\r\n\r\n};\r\n//data\r\n\r\nconst AddEmployee = () => {\r\n    const token = localStorage.getItem('token');\r\n    // API - get role \r\n    const [roleList, setRoleList] = useState([{}]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await axios.get('http://localhost:5500/staff-roles', {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + token,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                });\r\n                setRoleList(result.data.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [setRoleList]);\r\n    // add employee\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [role, setRole] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState('success');\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // handle form submit logic here\r\n        const data = { name, email,role,password };\r\n        axios.post('http://localhost:5500/staffs', data, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setShowAlert(true);\r\n                setAlertSeverity('success');\r\n                setAlertMessage('Employee added successfully');\r\n                setName('');\r\n                setEmail('');\r\n                setRole('');\r\n                setPassword('');\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setShowAlert(true);\r\n                setAlertSeverity('error');\r\n                setAlertMessage('Error adding employee. Please try again later.');\r\n            });\r\n    }\r\n    return (\r\n        <Box\r\n            sx={{\r\n                marginTop: 2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                '& .MuiTextField-root': { m: 1, width: '40ch' },\r\n            }}>\r\n            <h1>Add Employee</h1>\r\n            {showAlert &&\r\n                <Alert severity={alertSeverity} onClose={() => setShowAlert(false)} sx={{ mb: 2 }}>\r\n                    <AlertTitle>{alertSeverity === 'success' ? 'Success' : 'Error'}</AlertTitle>\r\n                    {alertMessage}\r\n                </Alert>\r\n            }\r\n            <Box component=\"form\"\r\n                sx={{ mt: 2, mb: 3 }}\r\n                noValidate\r\n                autoComplete=\"off\" >\r\n                <form name=\"addItem\">\r\n                    <div>\r\n                        Name:\r\n                        <TextField\r\n                            id=\"empName\"\r\n                            label=\"name\"\r\n                            variant=\"outlined\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        Email:\r\n                        <TextField\r\n                            id=\"empEmail\"\r\n                            label=\"email\"\r\n                            variant=\"outlined\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div >\r\n                        Role:\r\n                        <TextField\r\n                            id=\"empRole\"\r\n                            select\r\n                            label=\"Role\"\r\n                            defaultValue=\"uncategorized\"\r\n                            helperText=\"Please select employee's role\"\r\n                            value={role}\r\n                            onChange={(e) => setRole(e.target.value)}\r\n\r\n                        >\r\n                            {roleList.map((option) => (\r\n                                <MenuItem key={option._id} value={option._id}>\r\n                                    {option.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </div>\r\n                    <div>\r\n                        Password:\r\n                        <TextField\r\n                            id=\"staffPswd\"\r\n                            label=\"password\"\r\n                            variant=\"outlined\"\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    {/* <button type=\"submit\">submit</button> */}\r\n                    <Button fullWidth\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                        startIcon={<SendIcon />}\r\n                        color=\"success\"\r\n                        onClick={handleSubmit}>\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n\r\n                <Link\r\n                    variant=\"body2\"\r\n                    to=\"/admin/employee\">\r\n                    Go back to employee management page\r\n                </Link>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport default AddEmployee;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\productTags.js",["482","483","484","485","486"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n// API\r\nimport axios from 'axios';\r\n// mui\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Paper } from \"@mui/material\";\r\nimport {\r\n    Table, TableBody, TableCell,\r\n    TableContainer, TableHead, TableRow\r\n} from \"@mui/material\";\r\nimport Container from '@mui/material/Container';\r\n// alert\r\nimport { Alert, AlertTitle } from '@mui/material';\r\n\r\n// styles\r\nconst mdTheme = createTheme();\r\nconst styles = {\r\n    table: {\r\n        minWidth: '50%',\r\n        width: '100%',\r\n        display: 'flex',\r\n    },\r\n    tbTitle: {\r\n        fontSize: '1.5rem',\r\n        margin: '2%',\r\n    },\r\n};\r\n//data\r\n\r\nconst Tags = () => {\r\n    const token = localStorage.getItem('token');\r\n    // alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState('success');\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    // API - get tags \r\n    const [tags, setTags] = useState([{}]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await axios.get('http://localhost:5500/product-foodtype', {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + token,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                });\r\n                console.log(result.data);\r\n                setTags(result.data.data);\r\n                console.log(result.data.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [setTags]);\r\n    const getTags = async () => {\r\n        try {\r\n            const result = await axios.get('http://localhost:5500/product-foodtype', {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            setTags(result.data.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n        // delete food tag function\r\n        const handleTagDelete = (_id) => {\r\n            const TagToDelete = _id;\r\n            axios.delete(`http://localhost:5500/product-foodtype/${TagToDelete}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                    getTags();\r\n                    setShowAlert(true);\r\n                    setAlertSeverity('success');\r\n                    setAlertMessage('Tag deleted successfully');\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    setShowAlert(true);\r\n                    setAlertSeverity('error');\r\n                    setAlertMessage('Error deleting tag. Please try again later.');\r\n                });\r\n        };\r\n    return (\r\n        <Box\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n        >\r\n            <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n                <span style={styles.tbTitle}>Food Tag</span>\r\n                <Link to=\"/admin/menu/addFoodTag\">\r\n                    <Button variant=\"contained\" startIcon={<AddIcon />} color=\"primary\" >\r\n                        Add Tag\r\n                    </Button>\r\n                </Link>\r\n                {/* // alert */}\r\n                {showAlert &&\r\n                    <Alert severity={alertSeverity} onClose={() => setShowAlert(false)} sx={{ mb: 2 }}>\r\n                        <AlertTitle>{alertSeverity === 'success' ? 'Success' : 'Error'}</AlertTitle>\r\n                        {alertMessage}\r\n                    </Alert>\r\n                }\r\n                <TableContainer component={Paper} style={styles.table}>\r\n                    <Table >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>Action</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {tags.map((tag,_id) => (\r\n                                <TableRow key={_id}>\r\n                                    <TableCell>{tag.name}</TableCell>\r\n                                    <TableCell>{tag.description}</TableCell>\r\n                                    <TableCell>\r\n                                        {/* <Link to={`/admin/menu/editFoodTag/${tag._id}`}>\r\n                                            <IconButton aria-label=\"edit\" color=\"primary\">\r\n                                                <EditIcon />\r\n                                            </IconButton>\r\n                                        </Link> */}\r\n                                        <IconButton \r\n                                        aria-label=\"delete\" color=\"error\"\r\n                                        onClick={() => handleTagDelete(tag._id)}\r\n                                        >\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Container>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Tags;\r\n","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\productCategories.js",["487","488","489"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// API\r\nimport axios from 'axios';\r\n// mui\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Paper } from \"@mui/material\";\r\nimport {\r\n    Table, TableBody, TableCell,\r\n    TableContainer, TableHead, TableRow\r\n} from \"@mui/material\";\r\nimport Container from '@mui/material/Container';\r\n// alert\r\nimport { Alert, AlertTitle } from '@mui/material';\r\n\r\n// styles\r\nconst mdTheme = createTheme();\r\nconst styles = {\r\n    table: {\r\n        minWidth: '50%',\r\n        width: '100%',\r\n        display: 'flex',\r\n    },\r\n    tbTitle: {\r\n        fontSize: '1.5rem',\r\n        margin: '2%',\r\n    },\r\n};\r\n//data\r\n\r\nconst Categories = () => {\r\n    const token = localStorage.getItem('token');\r\n    // alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState('success');\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    // API - get categories \r\n    const [categories, setCategories] = useState([]);\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await axios.get('http://localhost:5500/products-categories', {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + token,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                });\r\n                console.log(result.data);\r\n                setCategories(result.data.data);\r\n                console.log(result.data.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [setCategories]);\r\n    const getCategories = async () => {\r\n        try {\r\n            const result = await axios.get('http://localhost:5500/products-categories', {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            setCategories(result.data.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    // delete category function\r\n    const handleCateDelete = (_id) => {\r\n        const CateToDelete = _id;\r\n        axios.delete(`http://localhost:5500/products-categories/${CateToDelete}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                getCategories();\r\n                setShowAlert(true);\r\n                setAlertSeverity('success');\r\n                setAlertMessage('Category deleted successfully');\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setShowAlert(true);\r\n                setAlertSeverity('error');\r\n                setAlertMessage('Error deleting category. Please try again later.');\r\n            });\r\n    };\r\n    return (\r\n        <Box\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n        >\r\n            <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n                <span style={styles.tbTitle}>Categories</span>\r\n                <Link to=\"/admin/menu/addCategory\">\r\n                    <Button variant=\"contained\" startIcon={<AddIcon />} color=\"primary\" >\r\n                        Add Category\r\n                    </Button>\r\n                </Link>\r\n                <p>Delete the products before delete theirs category.</p>\r\n\r\n                {/* // alert */}\r\n                {showAlert &&\r\n                    <Alert severity={alertSeverity} onClose={() => setShowAlert(false)} sx={{ mb: 2 }}>\r\n                        <AlertTitle>{alertSeverity === 'success' ? 'Success' : 'Error'}</AlertTitle>\r\n                        {alertMessage}\r\n                    </Alert>\r\n                }\r\n                <TableContainer component={Paper} style={styles.table}>\r\n                    <Table >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>Action</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {categories.map((v, _id) => (\r\n                                <TableRow key={_id}>\r\n                                    <TableCell>{v.name}</TableCell>\r\n                                    <TableCell>{v.description}</TableCell>\r\n                                    <TableCell>\r\n                                        {/* <IconButton\r\n                                            aria-label=\"edit\"\r\n                                            color=\"primary\"\r\n                                            component={Link}\r\n                                            to={`/admin/menu/editCategory/${v._id}`}\r\n                                        >\r\n                                            <EditIcon />\r\n                                        </IconButton> */}\r\n\r\n                                        <IconButton aria-label=\"delete\" color=\"error\"\r\n                                            onClick={() => handleCateDelete(v._id)}\r\n                                        >\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Container>\r\n        </Box>\r\n    );\r\n}\r\nexport default Categories;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\productDishes.js",["490","491","492","493","494"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n// API\r\nimport axios from 'axios';\r\n// mui\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Paper } from \"@mui/material\";\r\nimport {\r\n  Table, TableBody, TableCell,\r\n  TableContainer, TableHead, TableRow\r\n} from \"@mui/material\";\r\nimport Container from '@mui/material/Container';\r\n// alert\r\nimport { Alert, AlertTitle } from '@mui/material';\r\n\r\n// styles\r\nconst mdTheme = createTheme();\r\nconst styles = {\r\n  table: {\r\n    minWidth: '50%',\r\n    width: '100%',\r\n    display: 'flex',\r\n  },\r\n  tbTitle: {\r\n    fontSize: '1.5rem',\r\n    margin: '2%',\r\n  },\r\n};\r\n//data\r\n\r\nconst Dishes = () => {\r\n  const token = localStorage.getItem('token');\r\n    // alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState('success');\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n  const [dishes, setDishes] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await axios.get('http://localhost:5500/products', {\r\n          headers: {\r\n            'Authorization': 'Bearer ' + token,\r\n            'Content-Type': 'application/json'\r\n          },\r\n        });\r\n        console.log(result.data);\r\n        setDishes(result.data.data);\r\n        console.log(result.data.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [setDishes]);\r\n  const getDishes = async () => {\r\n    try {\r\n      const result = await axios.get('http://localhost:5500/products', {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + token,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      setDishes(result.data.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  // delete product function\r\n  const handleProductDelete = (_id) => {\r\n    const productToDelete = dishes[_id];\r\n    axios.delete(`http://localhost:5500/products/${productToDelete._id}`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        getDishes();\r\n        setShowAlert(true);\r\n        setAlertSeverity('success');\r\n        setAlertMessage('Product deleted successfully');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setShowAlert(true);\r\n        setAlertSeverity('error');\r\n        setAlertMessage('Error deleting product. Please try again later.');\r\n      });\r\n  };\r\n  return (\r\n    <Box\r\n      component=\"form\"\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n\r\n        <span style={styles.tbTitle}>Dishes</span>\r\n        <Link to=\"/admin/menu/addProduct\">\r\n          <Button variant=\"contained\" startIcon={<AddIcon />} color=\"primary\" >\r\n            Add Dishes\r\n          </Button>\r\n        </Link>\r\n        {/* // alert */}\r\n        {showAlert &&\r\n          <Alert severity={alertSeverity} onClose={() => setShowAlert(false)} sx={{ mb: 2 }}>\r\n            <AlertTitle>{alertSeverity === 'success' ? 'Success' : 'Error'}</AlertTitle>\r\n            {alertMessage}\r\n          </Alert>\r\n        }\r\n        <TableContainer component={Paper} style={styles.table}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Alt Name</TableCell>\r\n                <TableCell>Dine-In Price</TableCell>\r\n                <TableCell>Take Out Price</TableCell>\r\n                <TableCell>Category</TableCell>\r\n                <TableCell>Tags</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {dishes.map((product,_id) => (\r\n                <TableRow key={_id}>\r\n                  <TableCell>{product.name}</TableCell>\r\n                  <TableCell>{product.altName}</TableCell>\r\n                  <TableCell>{product.dineInPrice}</TableCell>\r\n                  <TableCell>{product.takeOutPrice}</TableCell>\r\n                  <TableCell>\r\n                    {product.category ? product.category.name : ''}\r\n                  </TableCell>\r\n                  <TableCell>{product.foodType.length > 0 ? product.foodType[0].name : ''}</TableCell>\r\n                  <TableCell>\r\n                    {/* <Link to={`/admin/menu/editDish/${id}`}></Link> */}\r\n                    {/* <IconButton aria-label=\"edit\" color=\"primary\" >\r\n                      <EditIcon />\r\n                    </IconButton> */}\r\n\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      color=\"error\"\r\n                      onClick={() => handleProductDelete(_id)}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\nexport default Dishes;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\OrdersHistory.js",["495","496","497","498"],[],"import React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\n// api\r\nimport axios from 'axios';\r\n//mui\r\nimport Link from '@mui/material/Link';\r\n// mui - table\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { TablePagination } from '@mui/material';\r\n// mui - time picker\r\n\r\n// styles\r\nconst styles = {\r\n    container: {\r\n        margin: '40px',\r\n    },\r\n    title: {\r\n        fontSize: '24px',\r\n        fontWeight: 'bold',\r\n        marginBottom: '20px',\r\n    },\r\n    orderType: {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        backgroundColor: '#2196F3',\r\n        color: '#fff',\r\n        borderRadius: '20px',\r\n        padding: '5px 15px',\r\n        marginRight: '10px',\r\n        marginLeft: '5%',\r\n        marginRight: '5%',\r\n    },\r\n    dineIn: {\r\n        backgroundColor: '#ddb31db3',\r\n        color: '#ffffff',\r\n    },\r\n    takeOut: {\r\n        backgroundColor: '#5a965778',\r\n        color: '#ffffff',\r\n    },\r\n    phone: {\r\n        backgroundColor: '#568bc0b5',\r\n        color: '#ffffff',\r\n    },\r\n    icon: {\r\n        marginRight: '5px',\r\n    },\r\n    tableCell: {\r\n        fontWeight: 'bold',\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    server: {\r\n        fontStyle: 'italic',\r\n    },\r\n};\r\n\r\n// Define the orders data\r\nconst allOrders = [\r\n    { id: '#907653', datetime: '28 Feb, 2023, 11:30 AM', orderType: 'Take Out', table: '', pmtType: 'cash', amount: '11.99', server: 'Ivy.L' },\r\n    { id: '#007654', datetime: '28 Feb, 2023, 12:15 PM', orderType: 'Dine In', table: 'T9', pmtType: 'credit', amount: '23.45', server: 'Jack.M' },\r\n    { id: '#207657', datetime: '28 Feb, 2023, 1:00 PM', orderType: 'Take Out', table: '', pmtType: 'credit', amount: '8.75', server: 'Grace.K' },\r\n    { id: '#347890', datetime: '28 Feb, 2023, 2:30 PM', orderType: 'Dine In', table: 'T2', pmtType: 'cash', amount: '45.67', server: 'Bob.T' },\r\n    { id: '#203578', datetime: '1 Mar, 2023, 11:30 AM', orderType: 'Phone', table: '', pmtType: 'credit', amount: '12.99', server: 'Ivy.L' },\r\n    { id: '#547543', datetime: '1 Mar, 2023, 12:15 PM', orderType: 'Dine In', table: 'T4', pmtType: 'cash', amount: '18.75', server: 'Jack.M' },\r\n    { id: '#647789', datetime: '1 Mar, 2023, 1:00 PM', orderType: 'Take Out', table: '', pmtType: 'credit', amount: '6.99', server: 'Grace.K' },\r\n    { id: '#377890', datetime: '1 Mar, 2023, 2:30 PM', orderType: 'Dine In', table: 'T5', pmtType: 'cash', amount: '30.67', server: 'Bob.T' },\r\n    { id: '#987690', datetime: '2 Mar, 2023, 11:30 AM', orderType: 'Phone', table: '', pmtType: 'credit', amount: '9.99', server: 'Ivy.L' },\r\n    { id: '#567543', datetime: '2 Mar, 2023, 12:15 PM', orderType: 'Dine In', table: 'T3', pmtType: 'cash', amount: '12.75', server: 'Jack.M' },\r\n    { id: '#987657', datetime: '2 Mar, 2023, 1:00 PM', orderType: 'Take Out', table: '', pmtType: 'credit', amount: '10.99', server: 'Grace.K' },\r\n    { id: '#047890', datetime: '2 Mar, 2023, 2:30 PM', orderType: 'Dine In', table: 'T1', pmtType: 'cash', amount: '51.67', server: 'Bob.T' },\r\n    { id: '#223578', datetime: '3 Mar, 2023, 11:30 AM', orderType: 'Take Out', table: '', pmtType: 'credit', amount: '15.99', server: 'Ivy.L' },\r\n    { id: '#047892', datetime: '2 Mar, 2023, 2:30 PM', orderType: 'Dine In', table: 'T9', pmtType: 'cash', amount: '51.67', server: 'Bob.T' },\r\n    { id: '#223579', datetime: '3 Mar, 2023, 11:30 AM', orderType: 'Take Out', table: '', pmtType: 'credit', amount: '15.99', server: 'Ivy.L' },\r\n];\r\n\r\n/**\r\n * A component that displays a table of orders.\r\n */\r\nexport default function AdminOrdersHistory() {\r\n    // 15 rows a page\r\n    const [page, setPage] = React.useState(0);\r\n    const rowsPerPage = 10;\r\n    const handleChangePage = (event, newPage) => {\r\n        \r\n        \r\n        const config = {\r\n            method: 'get',\r\n            maxBodyLength: Infinity,\r\n            url: `http://localhost:5500/admin-orders?page=${newPage + 1}&limit=${rowsPerPage}`,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n            },\r\n        };\r\n\r\n        axios\r\n        .request(config)\r\n        .then((response) => {\r\n            setOrders(response.data.data);\r\n            setPage(newPage);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    };\r\n    // change order type style\r\n    const getOrderTypeCellStyle = (orderType) => {\r\n        switch (orderType) {\r\n            case 'DineIn':\r\n                return { ...styles.orderType, ...styles.dineIn };\r\n            case 'TakeOut':\r\n                return { ...styles.orderType, ...styles.takeOut };\r\n            case 'Phone':\r\n                return { ...styles.orderType, ...styles.phone };\r\n            default:\r\n                return {};\r\n        }\r\n    };\r\n    // api\r\n    const token = localStorage.getItem('token');\r\n    const [orders, setOrders] = useState([]);\r\n    useEffect(() => {\r\n        const config = {\r\n            method: 'get',\r\n            maxBodyLength: Infinity,\r\n            url: `http://localhost:5500/admin-orders?page=${page}&limit=${rowsPerPage}`,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n            },\r\n        };\r\n\r\n        axios\r\n            .request(config)\r\n            .then((response) => {\r\n                setOrders(response.data.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, [setOrders]);\r\n    const formatTime = (timeString) => {\r\n        const time = new Date(timeString);\r\n        return time.toLocaleTimeString();\r\n    };\r\n    return (\r\n        <div style={styles.container}>\r\n            <div style={styles.title}>Orders History</div>\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\" style={styles.tableCell}>\r\n                            Order Id\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" style={styles.tableCell}>\r\n                            Time\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" style={styles.tableCell}>\r\n                            Order Type\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" style={styles.tableCell}>\r\n                            Table\r\n                        </TableCell>\r\n\r\n                        <TableCell align=\"center\" style={styles.tableCell}>\r\n                            Sale Amount\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" style={styles.tableCell}>\r\n                            Server\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {orders.orders && orders.orders\r\n                        .map((order) => (\r\n                            <TableRow key={order._id}>\r\n                                <TableCell align=\"center\">{order._id.slice(-4)}</TableCell>\r\n                                <TableCell align=\"center\">{formatTime(order.completedTime)}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <div style={getOrderTypeCellStyle(order.orderType)}>\r\n                                        {order.orderType}\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{order.table}</TableCell>\r\n                                <TableCell align=\"center\">{`$${order.totalCost}`}</TableCell>\r\n                                <TableCell align=\"center\">{order.staff}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                </TableBody>\r\n            </Table>\r\n            <TablePagination\r\n                rowsPerPageOptions={rowsPerPage}\r\n                component=\"div\"\r\n                count={orders.count}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n            />\r\n            <Link color=\"primary\" href=\"/admin/home\" sx={{ mt: 3 }}>\r\n                Back to home\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\pages\\RevenueHistory.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\logout.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\empLogout.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\layout.js",["499","500"],[],"import { Outlet } from \"react-router-dom\";\r\n// components\r\nimport OrderNav from \"./components/nav\";\r\n// navigation\r\nimport { useNavigate,useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { staffLoginService } from \"./services/auth\";\r\n\r\nconst styles = {\r\n//     page: {\r\n//       height: \"100vh\",\r\n//       backgroundColor: '#bfbfbf',\r\n//   },\r\n  };\r\n\r\nconst OrderLayout = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [pages, setPages] = useState([]);\r\n    useEffect(() => {\r\n        const currentPath = location.pathname;\r\n        let isLoggedIn = staffLoginService();\r\n        if (!isLoggedIn) {\r\n            if (currentPath != '/order/login') navigate('/order/login');\r\n            setPages((p) => [{ 'label': 'login', value: 'order/login' }]);\r\n        } else {\r\n            setPages(p => [{ value: 'order/home', label: 'Home' },\r\n            { value: 'order/dine-in-order', label: 'Dine-In' },\r\n            { value: 'order/take-out-order', label: 'Take Out' },\r\n            { value: 'order/phone-order', label: 'Phone' },\r\n            { value: 'order/current-orders', label: 'Tables' },\r\n            { value: 'order/current-orders', label: 'Current' },\r\n            { value: 'order/orders-history', label: 'History' },\r\n            { value: 'order/logout', label: 'logout'  }]);\r\n        }\r\n        if (currentPath == '/order/layout') navigate('/order/home');\r\n    }, [navigate, location, setPages]);\r\n    return (\r\n        <div style={styles.page}>\r\n            <OrderNav pages={pages} />\r\n            \r\n            <Outlet />      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderLayout; ","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\editRole.js",["501","502"],[],"import React from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\n// styles\r\nconst mdTheme = createTheme();\r\nconst styles = {\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"50px\",\r\n  },\r\n  button: {\r\n    marginTop: \"20px\",\r\n  },\r\n};\r\n\r\n// data\r\nconst roles = [\r\n  {\r\n    id: 1,\r\n    name: \"Admin\",\r\n    description: \"The system administrator, with the highest level of permissions.\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Manager\",\r\n    description: \"The restaurant manager, responsible for managing the daily operations of the restaurant.\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Chef\",\r\n    description: \"The chef, responsible for cooking in the restaurant.\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Waiter\",\r\n    description: \"The waiter, responsible for providing service and taking orders for customers.\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Cashier\",\r\n    description: \"The cashier, responsible for handling the restaurant's cash transactions.\",\r\n  },\r\n];\r\n\r\nconst EditRole = () => {\r\n  const { id } = useParams();\r\n  const role = roles.find((role) => role.id === 1);\r\n  const [name, setName] = React.useState(role ? role.name : \"\");\r\n  const [description, setDescription] = React.useState(role ? role.description : \"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // handle form submit logic here\r\n    console.log(\"Role updated: \", { name, description });\r\n    navigate(\"/admin/employee\");\r\n  };\r\n\r\n  if (!role) {\r\n    return <div>Role not found</div>;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={mdTheme}>\r\n      <Box\r\n        sx={{\r\n          marginTop: 2,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          \"& .MuiTextField-root\": { m: 1, width: \"40ch\" },\r\n        }}\r\n      >\r\n        <h1>Edit Role</h1>\r\n        <Box component=\"form\" sx={{ mt: 2, mb: 3 }} onSubmit={handleSubmit}>\r\n          <div>\r\n            <TextField\r\n              id=\"roleName\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              id=\"roleDescription\"\r\n              label=\"Description\"\r\n              variant=\"outlined\"\r\n              multiline\r\n              minRows={4}\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            startIcon={<SendIcon />}\r\n            color=\"success\"\r\n            type=\"submit\"\r\n          >\r\n            Update Role\r\n          </Button>\r\n          <Link to=\"/admin/employee\">Go back to employee management page</Link>\r\n        </Box>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default EditRole;\r\n","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\avaliableTables.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\editEmployee.js",["503","504"],[],"import React from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\n// styles\r\nconst mdTheme = createTheme();\r\nconst styles = {\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        marginTop: \"50px\",\r\n    },\r\n    button: {\r\n        marginTop: \"20px\",\r\n    },\r\n};\r\n\r\n// data\r\nconst employees = [\r\n    {\r\n        id: 1,\r\n        name: \"John Doe\",\r\n        email: \"johndoe@example.com\",\r\n        role: \"Manager\",\r\n        password: \"password123\",\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Jane Doe\",\r\n        email: \"janedoe@example.com\",\r\n        role: \"Waiter\",\r\n        password: \"password456\",\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Bob Smith\",\r\n        email: \"bobsmith@example.com\",\r\n        role: \"Cashier\",\r\n        password: \"password789\",\r\n    },\r\n];\r\n\r\nconst EditEmployee = () => {\r\n    const { id } = useParams();\r\n    const employee = employees.find((employee) => employee.id === 1);\r\n    const [name, setName] = React.useState(employee ? employee.name : \"\");\r\n    const [email, setEmail] = React.useState(employee ? employee.email : \"\");\r\n    const [role, setRole] = React.useState(employee ? employee.role : \"\");\r\n    const [password, setPassword] = React.useState(employee ? employee.password : \"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // handle form submit logic here\r\n        console.log(\"Employee updated: \", { name, email, role, password });\r\n        navigate(\"/admin/employee\");\r\n    };\r\n\r\n    if (!employee) {\r\n        return <div>Employee not found</div>;\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={mdTheme}>\r\n            <Box\r\n                sx={{\r\n                    marginTop: 2,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    \"& .MuiTextField-root\": { m: 1, width: \"40ch\" },\r\n                }}\r\n            >\r\n                <h1>Edit Employee</h1>\r\n                <Box component=\"form\" sx={{ mt: 2, mb: 3 }} onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <TextField\r\n                            id=\"employeeName\"\r\n                            label=\"Name\"\r\n                            variant=\"outlined\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            id=\"employeeEmail\"\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            id=\"employeeRole\"\r\n                            label=\"Role\"\r\n                            variant=\"outlined\"\r\n                            value={role}\r\n                            onChange={(e) => setRole(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            id=\"employeePassword\"\r\n                            label=\"Password\"\r\n                            variant=\"outlined\"\r\n                            value={password}\r\n                            type=\"password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                        startIcon={<SendIcon />}\r\n                        color=\"success\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Update Employee\r\n                    </Button>\r\n                    <Link to=\"/admin/employee\">Go back to employee management page</Link>\r\n                </Box>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default EditEmployee;\r\n","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\editTag.js",["505","506","507"],[],"import React, { useState } from \"react\";\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { Paper } from \"@mui/material\";\r\n\r\n// styles\r\nconst mdTheme = createTheme();\r\nconst styles = {\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"50px\",\r\n  },\r\n  button: {\r\n    marginTop: \"20px\",\r\n  },\r\n};\r\n\r\n//data\r\nconst tags = [\r\n  { id: 1, name:'TakeOutMenu', description:'Menu for Take Out Order and Phone Order'},\r\n  { id: 2, name:'Dine-In Menu', description:'Menu for Dine-In Order'},\r\n  { id: 3, name: 'Fish', description: 'Fish dishes' },\r\n  { id: 4, name: 'Sides', description: 'Side dishes' },\r\n  { id: 5, name: 'Beverage', description: 'Beverages' },\r\n  { id: 6, name: 'Special', description: 'Specialty dishes' },\r\n];\r\n\r\nconst EditTag = () => {\r\n  const { tagId } = useParams();\r\n  const tag = tags.find((tag) => tag.id === 1);\r\n  const [name, setName] = useState(tag ? tag.name : \"\");\r\n  const [description, setDescription] = useState(tag ? tag.description : \"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // handle form submit logic here\r\n    console.log(\"Tag updated: \", { name, description });\r\n    navigate(\"/admin/menu\");\r\n  };\r\n\r\n  if (!tag) {\r\n    return <div>Tag not found</div>;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={mdTheme}>\r\n      <Box\r\n        sx={{\r\n          marginTop: 2,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          \"& .MuiTextField-root\": { m: 1, width: \"40ch\" },\r\n        }}\r\n      >\r\n        <h1>Edit Tag</h1>\r\n        <Box component=\"form\" sx={{ mt: 2, mb: 3 }} onSubmit={handleSubmit}>\r\n          <div>\r\n            <TextField\r\n              id=\"tagName\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              id=\"tagDescription\"\r\n              label=\"Description\"\r\n              variant=\"outlined\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            startIcon={<SendIcon />}\r\n            color=\"success\"\r\n            type=\"submit\"\r\n          >\r\n            Update Tag\r\n          </Button>\r\n          <Link to=\"/admin/menu\">Go back to food tags management page</Link>\r\n        </Box>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default EditTag;\r\n","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\editCategory.js",["508","509","510"],[],"import React from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { Paper } from \"@mui/material\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\n// styles\r\nconst mdTheme = createTheme();\r\nconst styles = {\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        marginTop: \"50px\",\r\n    },\r\n    button: {\r\n        marginTop: \"20px\",\r\n    },\r\n};\r\n\r\n// data\r\nconst categories = [\r\n    { id: 1, name: \"Uncategorized\", description: \"Uncategorized\" },\r\n    { id: 2, name: \"2pcDinner\", description: \"2pc Fish and Chip Dinners\" },\r\n    { id: 3, name: \"2pcOnly\", description: \"2pc Fish Only\" },\r\n    { id: 4, name: \"family\", description: \"Family Packs\" },\r\n    { id: 5, name: \"sfp\", description: \"Sea Food Platter\" },\r\n    { id: 6, name: \"fries\", description: \"Homemade Fries\" },\r\n    { id: 7, name: \"lunch\", description: \"Homemade Fries\" },\r\n    { id: 8, name: \"shrimpSpecial\", description: \"Shrimp Special\" },\r\n    { id: 9, name: \"kid\", description: \"Kid's Combo\" },\r\n    { id: 10, name: \"side\", description: \"Side Orders\" },\r\n    { id: 11, name: \"beverage\", description: \"Beverages\" },\r\n];\r\n\r\nconst EditCategory = () => {\r\n    const { id } = useParams();\r\n    const category = categories.find((category) => category.id === 1);\r\n    const [name, setName] = React.useState(category ? category.name : \"\");\r\n    const [description, setDescription] = React.useState(\r\n        category ? category.description : \"\"\r\n    );\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // handle form submit logic here\r\n        console.log(\"Category updated: \", { name, description });\r\n        navigate(\"/admin/menu/categories\");\r\n    };\r\n\r\n    if (!category) {\r\n        return <div>Category not found</div>;\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={mdTheme}>\r\n            <Box\r\n                sx={{\r\n                    marginTop: 2,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    \"& .MuiTextField-root\": { m: 1, width: \"40ch\" },\r\n                }}\r\n            >\r\n                <Typography variant=\"h4\">Edit Category</Typography>\r\n                <Box component=\"form\" sx={{ mt: 2, mb: 3 }} onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <TextField\r\n                            id=\"categoryName\"\r\n                            label=\"Name\"\r\n                            variant=\"outlined\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            id=\"categoryDescription\"\r\n                            label=\"Description\"\r\n                            variant=\"outlined\"\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                        startIcon={<SendIcon />}\r\n                        color=\"success\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Update Category\r\n                    </Button>\r\n                    <Link to=\"/admin/menu/categories\">\r\n                        Go back to categories management page\r\n                    </Link>\r\n                </Box>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default EditCategory;\r\n","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\components\\editDishes.js",["511","512"],[],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { Paper } from \"@mui/material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport Container from '@mui/material/Container';\r\n\r\n// data\r\nconst dishes = [\r\n    {\r\n        name: '2pc Wihtefish & chips',\r\n        alterName: 'W/C',\r\n        dineInPrice: '10.19',\r\n        takeoutPrice: '10.19',\r\n        category: [{\r\n            \"_id\": \"3456789012\",\r\n            \"name\": \"2pc Fish & Chips\",\r\n            \"description\": \"2 pieces fish with 1 pack homemade fries\"\r\n        }],\r\n        tags: [{\r\n            \"_id\": \"2345678901\",\r\n            \"name\": \"Fish\",\r\n            \"description\": \"Fish dishes\"\r\n        }]\r\n    },\r\n    {\r\n        name: '2pc Cod & chips',\r\n        alterName: 'Cod/C',\r\n        dineInPrice: '11.99',\r\n        takeoutPrice: '10.19',\r\n        category: [{\r\n            \"_id\": \"2345678902\",\r\n            \"name\": \"2pc Fish and Chip Dinners\",\r\n            \"description\": \"2 pieces cod with 1 pack homemade fries\"\r\n        }],\r\n        tags: [{\r\n            \"_id\": \"2345678901\",\r\n            \"name\": \"Fish\",\r\n            \"description\": \"Fish dishes\"\r\n        }]\r\n    },\r\n    {\r\n        name: '2pc haddock & chips',\r\n        alterName: 'HD/C',\r\n        dineInPrice: '11.99',\r\n        takeoutPrice: '10.19',\r\n        category: [{\r\n            \"_id\": \"2345678902\",\r\n            \"name\": \"2pc Fish and Chip Dinners\",\r\n            \"description\": \"2 pieces haddock with 1 pack homemade fries\"\r\n        }],\r\n        tags: [{\r\n            \"_id\": \"2345678901\",\r\n            \"name\": \"Fish\",\r\n            \"description\": \"Fish dishes\"\r\n        }]\r\n    },\r\n    {\r\n        name: '2pc Halibut & chips',\r\n        alterName: 'HB/C',\r\n        dineInPrice: '11.99',\r\n        takeoutPrice: '10.19',\r\n        category: [{\r\n            \"_id\": \"2345678902\",\r\n            \"name\": \"2pc Fish and Chip Dinners\",\r\n            \"description\": \"2 pieces halibut with 1 pack homemade fries\"\r\n        }],\r\n        tags: [{\r\n            \"_id\": \"2345678901\",\r\n            \"name\": \"Fish\",\r\n            \"description\": \"Fish dishes\"\r\n        }]\r\n    },\r\n    {\r\n        name: '8pc Shrimps & Chips',\r\n        alterName: '11.49',\r\n        dineInPrice: '11.49',\r\n        takeoutPrice: '10.19',\r\n        category: [{\r\n            \"_id\": \"2345678903\",\r\n            \"name\": \"Shrimp Special\",\r\n            \"description\": \"8 pieces shrimps with 1 pack homemade fries\"\r\n        }],\r\n        tags: [{\r\n            \"_id\": \"2345678902\",\r\n            \"name\": \"Special\",\r\n            \"description\": \"Specialty dishes\"\r\n        }, {\r\n            \"_id\": \"2345678903\",\r\n            \"name\": \"Sides\",\r\n            \"description\": \"Side dishes\"\r\n        }]\r\n    }\r\n];\r\n\r\n// styles\r\nconst mdTheme = createTheme();\r\nconst styles = {\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        marginTop: \"50px\",\r\n    },\r\n    textField: {\r\n        width: \"100%\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    button: {\r\n        marginTop: \"20px\",\r\n    },\r\n    deleteButton: {\r\n        marginTop: \"20px\",\r\n        color: \"#FF0000\",\r\n    },\r\n};\r\nconst EditDish = () => {\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    // find the dish to edit\r\n    const dish = dishes.find((dish) => dish.name === 1);\r\n\r\n    // state variables for form values\r\n    const [name, setName] = useState(dish.name);\r\n    const [alterName, setAlterName] = useState(dish.alterName);\r\n    const [dineInPrice, setDineInPrice] = useState(dish.dineInPrice);\r\n    const [takeoutPrice, setTakeoutPrice] = useState(dish.takeoutPrice);\r\n\r\n    // submit form handler\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // update the dish\r\n        const updatedDish = {\r\n            name: name,\r\n            alterName: alterName,\r\n            dineInPrice: dineInPrice,\r\n            takeoutPrice: takeoutPrice,\r\n            category: dish.category,\r\n            tags: dish.tags,\r\n        };\r\n        // replace the old dish with the updated one\r\n        const updatedDishes = dishes.map((dish) =>\r\n            dish.name === id ? updatedDish : dish\r\n        );\r\n        console.log(updatedDishes);\r\n        // navigate back to the dishes page\r\n        navigate(\"/admin/menu/dishes\");\r\n    };\r\n\r\n    // delete dish handler\r\n    const handleDelete = () => {\r\n        // remove the dish from the dishes list\r\n        const updatedDishes = dishes.filter((dish) => dish.name !== id);\r\n        console.log(updatedDishes);\r\n        // navigate back to the dishes page\r\n        navigate(\"/admin/menu/dishes\");\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            component=\"form\"\r\n            sx={styles.form}\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n        >\r\n            <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n                <Paper elevation={3} style={{ padding: \"20px\", width: \"50%\" }}>\r\n                    <Typography variant=\"h4\">Edit Dish</Typography>\r\n                    <TextField\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        sx={styles.textField}\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        id=\"alterName\"\r\n                        label=\"Alternate Name\"\r\n                        variant=\"outlined\"\r\n                        sx={styles.textField}\r\n                        value={alterName}\r\n                        onChange={(e) => setAlterName(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        id=\"dineInPrice\"\r\n                        label=\"Dine-In Price\"\r\n                        variant=\"outlined\"\r\n                        sx={styles.textField}\r\n                        value={dineInPrice}\r\n                        onChange={(e) => setDineInPrice(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        id=\"takeoutPrice\"\r\n                        label=\"Take-Out Price\"\r\n                        variant=\"outlined\"\r\n                        sx={styles.textField}\r\n                        value={takeoutPrice}\r\n                        onChange={(e) => setTakeoutPrice(e.target.value)}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        sx={styles.button}\r\n                        startIcon={<SendIcon />}\r\n                        type=\"submit\"\r\n                    >\r\n                        Update Dish\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        sx={styles.deleteButton}\r\n                        onClick={handleDelete}\r\n                    >\r\n                        Delete Dish\r\n                    </Button>\r\n                </Paper>\r\n            </Container>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default EditDish;\r\n","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pageTakeoutOrder.js",["513"],[],"import React,{useState} from 'react';\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport TakeOutMenu from '../components/takeoutMenu';\r\nimport TakeoutDisplay from '../components/takeoutDisplay';\r\n\r\n//styles\r\nconst theme = createTheme();\r\nconst styles = {\r\n    page: {\r\n        display: 'flex',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n    },\r\n    leftContainer: {\r\n        backgroundColor: '#e4e6e7',\r\n        height: '91.5vh',\r\n        color: 'black',\r\n        // display: 'inline-block',\r\n\r\n    },\r\n    rightContainer: {\r\n        // backgroundColor: '#dbba57',//dine in\r\n        // backgroundColor:'#a9d6a9', //take out\r\n        // backgroundColor: '#7bb8db', //phone\r\n        backgroundColor: '#e4e6e7',\r\n        height: '100vh',\r\n        width: '70%',\r\n        overflow: 'auto',\r\n        position: 'absolute',\r\n        transition: 'left 0.8s ease-out',\r\n    },\r\n};\r\n\r\n\r\nconst TakeOutOrderInterface = () => {\r\n    const [isOrderOpen, setIsOrderOpen] = useState(false);\r\n\r\n    const toggleOrderOpen = (e) => {\r\n        setIsOrderOpen(false);\r\n    };\r\n\r\n    const toggleOrderClose = (e) => {\r\n        setIsOrderOpen(true);\r\n    }\r\n    // pass data\r\n    const [data, setData] = useState([]);\r\n    const handleDataChange = (newData) =>{\r\n\r\n        let targetData = data.find(v => v._id == newData._id);\r\n        if(targetData) {\r\n            targetData.quality += 1;\r\n            setData([...data]);\r\n        } else {\r\n            let newList = [...data, newData];\r\n            setData(newList);\r\n        }\r\n        // console.log(data);\r\n    }\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={theme}>\r\n                <Grid container style={styles.page}>\r\n\r\n                    <Grid item xs={6}\r\n                        style={{\r\n                            ...styles.leftContainer,\r\n                        }}\r\n                        onClick={toggleOrderClose}\r\n                    >\r\n                        <TakeoutDisplay  data={data}/>\r\n                    </Grid>\r\n                    <div\r\n                        style={{\r\n                            ...styles.rightContainer,\r\n                            right: isOrderOpen ? '-20%' : '0%',\r\n                        }}\r\n                        onClick={toggleOrderOpen}>\r\n                        <Grid item xs={12}>\r\n                            <TakeOutMenu  onDataChange={handleDataChange}/>\r\n                        </Grid>\r\n                    </div>\r\n\r\n                </Grid>\r\n            </ThemeProvider>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TakeOutOrderInterface; ","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\phoneDisplay.js",["514","515","516","517","518","519","520","521","522"],[],"import React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n// api\r\nimport axios from 'axios';\r\n//mui\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport {\r\n    Table, TableContainer, TableBody,\r\n    TableCell, TableHead, TableRow, TextField, Tab\r\n} from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport { IconButton } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport LocalPrintshopTwoToneIcon from '@mui/icons-material/LocalPrintshopTwoTone';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport SafetyDividerIcon from '@mui/icons-material/SafetyDivider';\r\nimport StickyNote2TwoToneIcon from '@mui/icons-material/StickyNote2TwoTone';\r\n//drop down menu\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n//pop-up\r\nimport Popover from '@mui/material/Popover';\r\n// dialog\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { width } from '@mui/system';\r\n\r\n//style\r\nconst theme = createTheme({\r\n    palette: {\r\n        success: {\r\n            main: '#64b478',\r\n        },\r\n        secondary: {\r\n            main: '#3F51B5',\r\n        },\r\n    },\r\n});\r\nconst styles = {\r\n    space: {\r\n        paddingTop: '1%',\r\n    },\r\n    backIcon: {\r\n        paddingTop: '30%',\r\n    },\r\n    orderTypeTxt: {\r\n        fontSize: '1.5rem',\r\n        fontWeight: 'bold',\r\n\r\n        marginTop: '2%',\r\n    },\r\n    dropdownTxt: {\r\n        fontSize: '1.2rem',\r\n        marginLeft: 0,\r\n    },\r\n    dropdown: {\r\n        fontSize: '1rem',\r\n        fontWeight: 'bold',\r\n    },\r\n    table: {\r\n        height: '100%',\r\n        maxHeight: '100%',\r\n        paddingLeft: '2%',\r\n        paddingRight: '2%',\r\n    },\r\n    tableH: {\r\n        fontSize: '1.2rem',\r\n        fontWeight: 'bold',\r\n    },\r\n    tableB: {\r\n        fontSize: '1rem',\r\n    },\r\n    total: {\r\n        paddingTop: '2%',\r\n        paddingBottom: '2%',\r\n        paddingRight: '1%',\r\n        paddingLeft: '12%',\r\n    },\r\n    subtotaltxt: {\r\n        paddingTop: '5%',\r\n        paddingBottom: '1%',\r\n        border: 'none ',\r\n        fontSize: '1rem',\r\n    },\r\n    bottomBtn: {\r\n        paddingTop: '2%',\r\n        paddingBottom: '2%',\r\n        paddingLeft: '5%',\r\n        paddingRight: '0%',\r\n    },\r\n    button: {\r\n        height: '120%',\r\n        width: '100%',\r\n        marginLeft: '8%',\r\n        fontSize: '20px',\r\n        color: '#fff',\r\n    },\r\n    iconButton: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    icon: {\r\n        fontSize: '3rem',\r\n    },\r\n    iconBtnTXT: {\r\n        variant: 'caption',\r\n        textAlign: 'center',\r\n    },\r\n};\r\n// data\r\nconst tables = [\r\n    { label: 'Table 0', value: '0' },\r\n    { label: 'Table 1', value: '1' },\r\n    { label: 'Table 2', value: '2' },\r\n    { label: 'Table 3', value: '3' },\r\n    { label: 'Table 4', value: '4' },\r\n    { label: 'Table 5', value: '5' },\r\n    { label: 'Table 6', value: '6' },\r\n    { label: 'Table 7', value: '7' },\r\n    { label: 'Table 8', value: '8' },\r\n    { label: 'Table 9', value: '9' },\r\n    { label: 'Table 10', value: '10' },\r\n];\r\n\r\n// default export \r\nconst PhoneDisplay = (props) => {\r\n    // back button\r\n    const link = useNavigate();\r\n    const handleBackClick = () => {\r\n        link('/order/home');\r\n    };\r\n    // drop down - table\r\n    const [selectedTable, setSelectedTable] = useState(tables[0].value);\r\n    const handleTableChange = (event) => {\r\n        setSelectedTable(event.target.value);\r\n    };\r\n    // calculate subtotal\r\n    let defaultTotal = 0;\r\n    let tax = 0;\r\n    let total = 0;\r\n    const getTotal = () => {\r\n        if (props.data.length <= 0) return `${defaultTotal.toFixed(2)}`;\r\n        props.data.forEach(v => {\r\n            defaultTotal += v.quality * v.dineInPrice;\r\n        });\r\n        return `${defaultTotal.toFixed(2)}`;\r\n    }\r\n\r\n    const getTax = () => {\r\n        tax = Math.floor(defaultTotal * 13 / 100);\r\n        return `${tax.toFixed(2)}`;\r\n    }\r\n\r\n    const getTaxAndTotal = () => {\r\n        total = defaultTotal + tax;\r\n        return `${total.toFixed(2)}`;\r\n    }\r\n\r\n\r\n    // Button Note: dialog\r\n    const [noteValue, setNoteValue] = useState('');\r\n    const [Dialogopen, setDialogOpen] = useState(false);\r\n    // open\r\n    const handleNoteClickOpen = () => {\r\n        setDialogOpen(true);\r\n    };\r\n    // save note data\r\n    const handleNoteChange = (event) => {\r\n        setNoteValue(event.target.value);\r\n    };\r\n    const handleNoteSave = () => {\r\n        setNoteValue(noteValue);\r\n        setDialogOpen(false);\r\n    };\r\n    // close\r\n    const handleNoteClose = () => {\r\n        setNoteValue('');\r\n        setDialogOpen(false);\r\n    };\r\n\r\n\r\n    // bottom buttons\r\n    const cusNameRef = useRef(null);\r\n    const cusPhoneRef = useRef(null);\r\n    const pickupTimeRef = useRef(null);\r\n    const totalCostRef = useRef(null);\r\n    const taxRef = useRef(null);\r\n    const beforeTaxRef = useRef(null);\r\n\r\n    const orderPrint = () => {\r\n        // get order data\r\n        let cusName = cusNameRef.current.value;\r\n        let cusPhone = cusPhoneRef.current.value;\r\n        let pickupTime = pickupTimeRef.current.value;\r\n        let totalCost = parseFloat(totalCostRef.current?.textContent);\r\n        let taxCost = parseFloat(taxRef.current?.textContent);\r\n        let beforeTaxCost = parseFloat(beforeTaxRef.current?.textContent);\r\n\r\n        const order = {\r\n            orderType: 'Phone',\r\n            table: null,\r\n            totalCost: totalCost,\r\n            tax: taxCost,\r\n            beforeTax: beforeTaxCost,\r\n            food: props.data,\r\n            note: noteValue,\r\n            customer:{\r\n                name:cusName,\r\n                phone:cusPhone,\r\n                pickupTime:pickupTime,\r\n            }\r\n        };\r\n        console.log(order);\r\n        //api\r\n        const token = localStorage.getItem('token');\r\n        let data = order;\r\n        let config = {\r\n            method: 'post',\r\n            maxBodyLength: Infinity,\r\n            url: 'http://localhost:5500/orders',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data: data\r\n        };\r\n\r\n        axios.request(config)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                console.log(token);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n            link('/order/home');\r\n    }\r\n    const orderDone = () => {\r\n\r\n    }\r\n    const orderPaid = () => {\r\n\r\n    }\r\n    // pop-up window: New Feature Coming Soon!\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <div>\r\n            <ThemeProvider theme={theme}>\r\n\r\n                {/* Head: Order Head */}\r\n                <Grid container>\r\n                    {/* back icon */}\r\n                    <Grid item xs={5} >\r\n                        <IconButton\r\n                            onClick={handleBackClick}>\r\n                            <ArrowBackIosNewIcon\r\n                                style={styles.backIcon} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    {/* Head: Order Type:  Dine in */}\r\n                    <Grid item xs={5} style={styles.orderTypeTxt} >\r\n                        Phone\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                {/* phone order only */}\r\n                <Grid container>\r\n                    <Grid item xs={4} >\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            id=\"cusName\" name=\"cusName\"\r\n                            label=\"Customer Name\"\r\n                            inputRef={cusNameRef}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={3} >\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            margin=\"normal\"\r\n                            id=\"cusPhone\" name=\"cusPhone\"\r\n                            label=\"Phone\"\r\n                            inputRef={cusPhoneRef}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={5} >\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            size=\"small\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            id=\"pickupTime\" name=\"pickupTime\"\r\n                            label=\"Pick Up Time\"\r\n                            inputRef={pickupTimeRef}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                {/* Order detail list */}\r\n                <Grid container>\r\n                    <Grid item xs={12}\r\n                        style={styles.table}>\r\n                        <TableContainer\r\n                            component={Paper}\r\n                            style={{ height: '38vh' }}>\r\n\r\n                            <Table size=\"small\" >\r\n                                <TableHead\r\n                                    style={{ position: 'sticky', top: 0 }}>\r\n                                    <TableRow>\r\n                                        <TableCell style={styles.tableH}>Item</TableCell>\r\n                                        <TableCell style={styles.tableH} align=\"left\">Quantity</TableCell>\r\n                                        <TableCell style={styles.tableH}>Price</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n\r\n                                <TableBody>\r\n                                    {props.data && props.data.length > 0 && props.data.map((v) => (\r\n                                        <TableRow>\r\n                                            <TableCell style={styles.tableB}>{v.altName}</TableCell>\r\n                                            <TableCell style={{ ...styles.tableB, paddingRight: '15%' }} align=\"center\">{v.quality}</TableCell>\r\n                                            <TableCell style={{ ...styles.tableB, paddingRight: '15%' }} align=\"center\">{v.dineInPrice * v.quality}</TableCell>\r\n                                            {/* <TableCell style={styles.tableB} align=\"center\">{v.total}</TableCell> */}\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* Note & Order subtotal list */}\r\n                <Grid container >\r\n                    {/* Note Display Here */}\r\n                    <Grid item xs={5} >\r\n                        <p style={{ marginLeft: '7%', fontWeight: 'bold' }}>Note: </p>\r\n                        <p style={{\r\n                            maxWidth: '40rem', wordWrap: 'break-word',\r\n                            maxHeight: '4rem', overflow: 'scroll',\r\n                            marginLeft: '7%'\r\n                        }}>\r\n                            {noteValue}\r\n                        </p>\r\n                    </Grid>\r\n                    {/* Subtotal */}\r\n                    <Grid item xs={7} style={styles.total}>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ ...styles.subtotaltxt, fontWeight: 'bold' }}\r\n                                align=\"right\">\r\n                                Sub Total:\r\n                            </TableCell>\r\n                            <TableCell\r\n                                ref={beforeTaxRef}\r\n                                style={styles.subtotaltxt}\r\n                                align=\"right\">\r\n                                {getTotal()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ ...styles.subtotaltxt, fontWeight: 'bold' }}\r\n                                align=\"right\">\r\n                                Tax(13%):\r\n                            </TableCell>\r\n                            <TableCell\r\n                                ref={taxRef}\r\n                                style={styles.subtotaltxt}\r\n                                align=\"right\">\r\n                                {getTax()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ ...styles.subtotaltxt, fontWeight: 'bold' }}\r\n                                align=\"right\">\r\n                                Total:  $\r\n                            </TableCell>\r\n                            <TableCell\r\n                                ref={totalCostRef}\r\n                                style={styles.subtotaltxt}\r\n                                align=\"right\">\r\n                                {getTaxAndTotal()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* buttons */}\r\n                <Grid container style={styles.bottomBtn}>\r\n                    {/* Print */}\r\n                    <Grid item xs={3} >\r\n                        <IconButton style={styles.iconButton}\r\n                            onClick={orderPrint}>\r\n                            <LocalPrintshopTwoToneIcon style={styles.icon} />\r\n                            <Typography style={styles.iconBtnTXT}>\r\n                                Print\r\n                            </Typography>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    {/* Note */}\r\n                    <Grid item xs={3} >\r\n                        <IconButton style={styles.iconButton}\r\n                            onClick={handleNoteClickOpen}>\r\n                            <StickyNote2TwoToneIcon style={styles.icon} />\r\n                            <Typography style={styles.iconBtnTXT}>\r\n                                Note\r\n                            </Typography>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    {/* Edit - Coming Soon*/}\r\n                    <Grid item xs={3} >\r\n                        <IconButton style={styles.iconButton}\r\n                            onClick={handleClick}>\r\n                            <EditTwoToneIcon style={styles.icon} />\r\n                            <Typography style={styles.iconBtnTXT}>\r\n                                Edit\r\n                            </Typography>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    {/* Separate - Coming Soon*/}\r\n                    <Grid item xs={3} >\r\n                        <IconButton style={styles.iconButton}\r\n                            onClick={handleClick}>\r\n                            <SafetyDividerIcon style={styles.icon} />\r\n                            <Typography style={styles.iconBtnTXT}>\r\n                                Separate\r\n                            </Typography>\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* Buttons: Done-order status & Pay-pmy status */}\r\n                {/* <Grid container style={styles.space}>\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            onClick={orderDone}\r\n                            style={styles.button}\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            color='success'\r\n                        >\r\n                            Done\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <Button\r\n                            onClick={orderPaid}\r\n                            style={styles.button}\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                        >\r\n                            Pay &nbsp;&nbsp; $ {getTaxAndTotal()}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid> */}\r\n            </ThemeProvider>\r\n\r\n            {/* Pop-up Window */}\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <Typography sx={{ p: 2 }}>New Feature Coming Soon!</Typography>\r\n            </Popover>\r\n\r\n            {/* Dialog Window */}\r\n            <Dialog open={Dialogopen} onClose={handleNoteClose}>\r\n                <DialogTitle>Note</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Leave a note of this order:\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        multiline\r\n                        rows={4}\r\n                        variant=\"standard\"\r\n                        value={noteValue}\r\n                        onChange={handleNoteChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleNoteClose}>Cancel</Button>\r\n                    <Button onClick={handleNoteSave}>Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default PhoneDisplay;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\phoneMenu.js",[],[],"E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\pages\\pageOrderDetail.js",["523","524"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useParams  } from 'react-router-dom';\r\n// api\r\nimport axios from 'axios';\r\n//mui\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport DetailDisplay from '../components/detailDisplay';\r\n\r\n//styles\r\nconst theme = createTheme();\r\nconst styles = {\r\n    page: {\r\n        display: 'flex',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n    },\r\n    leftContainer: {\r\n        backgroundColor: '#e4e6e7',\r\n        height: '91.5vh',\r\n        color: 'black',\r\n        // display: 'inline-block',\r\n\r\n    },\r\n    rightContainer: {\r\n        // backgroundColor: '#dbba57',//dine in\r\n        // backgroundColor:'#a9d6a9', //take out\r\n        // backgroundColor: '#7bb8db', //phone\r\n        backgroundColor: '#e4e6e7',\r\n        height: '100vh',\r\n        width: '70%',\r\n        overflow: 'auto',\r\n        position: 'absolute',\r\n        transition: 'left 0.8s ease-out',\r\n    },\r\n};\r\n\r\n\r\nconst PageDineInOrder = () => {\r\n    const {id} = useParams();\r\n\r\n    // pass data\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            method: 'get',\r\n            maxBodyLength: Infinity,\r\n            url: 'http://localhost:5500/orders/' + id,\r\n            headers: { \r\n              'Authorization': 'Bearer ' + token\r\n            }\r\n          };\r\n          \r\n          axios.request(config)\r\n          .then((response) => {\r\n            if (response.data.status != 200) return; \r\n            console.log(response.data.data);\r\n            setData(response.data.data);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n        \r\n    }, [setData]);\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={theme}>\r\n                <Grid container style={styles.page}>\r\n                <Grid item xs={2}></Grid>\r\n                    <Grid item xs={8}\r\n                        style={{\r\n                            ...styles.leftContainer,\r\n                        }}\r\n                    >\r\n                        <DetailDisplay data={data}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </ThemeProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PageDineInOrder; ","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\orderSystem\\components\\detailDisplay.js",["525","526","527","528","529","530","531","532","533"],[],"import React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n// api\r\nimport axios from 'axios';\r\n//mui\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport {\r\n    Table, TableContainer, TableBody,\r\n    TableCell, TableHead, TableRow, TextField, Tab\r\n} from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport { IconButton } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport LocalPrintshopTwoToneIcon from '@mui/icons-material/LocalPrintshopTwoTone';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport SafetyDividerIcon from '@mui/icons-material/SafetyDivider';\r\nimport StickyNote2TwoToneIcon from '@mui/icons-material/StickyNote2TwoTone';\r\n//drop down menu\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n//pop-up\r\nimport Popover from '@mui/material/Popover';\r\n// dialog\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { width } from '@mui/system';\r\n\r\n//style\r\nconst theme = createTheme({\r\n    palette: {\r\n        success: {\r\n            main: '#64b478',\r\n        },\r\n        secondary: {\r\n            main: '#3F51B5',\r\n        },\r\n    },\r\n});\r\nconst styles = {\r\n    space: {\r\n        paddingTop: '1%',\r\n    },\r\n    backIcon: {\r\n        paddingTop: '30%',\r\n    },\r\n    orderTypeTxt: {\r\n        fontSize: '1.5rem',\r\n        fontWeight: 'bold',\r\n\r\n        marginTop: '2%',\r\n    },\r\n    dropdownTxt: {\r\n        fontSize: '1.2rem',\r\n        marginLeft: 0,\r\n    },\r\n    dropdown: {\r\n        fontSize: '1rem',\r\n        fontWeight: 'bold',\r\n    },\r\n    table: {\r\n        height: '100%',\r\n        maxHeight: '100%',\r\n        paddingLeft: '2%',\r\n        paddingRight: '2%',\r\n    },\r\n    tableH: {\r\n        fontSize: '1.2rem',\r\n        fontWeight: 'bold',\r\n    },\r\n    tableB: {\r\n        fontSize: '1rem',\r\n    },\r\n    total: {\r\n        paddingTop: '2%',\r\n        paddingBottom: '2%',\r\n        paddingRight: '1%',\r\n        paddingLeft: '12%',\r\n    },\r\n    subtotaltxt: {\r\n        paddingTop: '5%',\r\n        paddingBottom: '1%',\r\n        border: 'none ',\r\n        fontSize: '1rem',\r\n    },\r\n    bottomBtn: {\r\n        paddingTop: '2%',\r\n        paddingBottom: '2%',\r\n        paddingLeft: '5%',\r\n        paddingRight: '0%',\r\n    },\r\n    button: {\r\n        height: '120%',\r\n        width: '100%',\r\n        marginLeft: '8%',\r\n        fontSize: '20px',\r\n        color: '#fff',\r\n    },\r\n    iconButton: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    icon: {\r\n        fontSize: '3rem',\r\n    },\r\n    iconBtnTXT: {\r\n        variant: 'caption',\r\n        textAlign: 'center',\r\n    },\r\n};\r\n\r\n\r\n// default export \r\nconst DetailDisplay = (props) => {\r\n    const [isDoneButtonDisabled, setIsDoneButtonDisabled] = useState(false);\r\n    const [isPayButtonDisabled, setIsPayButtonDisabled] = useState(false);\r\n    // back button\r\n    const link = useNavigate();\r\n    const handleBackClick = () => {\r\n        link('/order/home');\r\n    };\r\n\r\n    // calculate subtotal\r\n    let defaultTotal = 0;\r\n    let tax = 0;\r\n    let total = 0;\r\n    const getTotal = () => {\r\n        if (props.data.food && props.data.food.length <= 0) return `${defaultTotal.toFixed(2)}`;\r\n        props.data && props.data.food && props.data.food.forEach(v => {\r\n            defaultTotal += v.quality * v.dineInPrice;\r\n        });\r\n        return `${defaultTotal.toFixed(2)}`;\r\n    }\r\n\r\n    const getTax = () => {\r\n        tax = Math.floor(defaultTotal * 13 / 100);\r\n        return `${tax.toFixed(2)}`;\r\n    }\r\n\r\n    const getTaxAndTotal = () => {\r\n        total = defaultTotal + tax;\r\n        return `${total.toFixed(2)}`;\r\n    }\r\n\r\n    // bottom buttons\r\n    const totalCostRef = useRef(null);\r\n    const taxRef = useRef(null);\r\n    const beforeTaxRef = useRef(null);\r\n\r\n\r\n    // get data\r\n    let note = props.data.note !== undefined ? `${props.data.note}` : '';\r\n    let id = props.data._id;\r\n    // dine in order only\r\n    let table = props.data.table !== undefined ? `${props.data.table}` : '';\r\n\r\n    // phone order only\r\n    let cusName = props.data.customer && props.data.customer.name ? `${props.data.customer.name}` : '';\r\n    let cusPhone = props.data.customer && props.data.customer.phone ? `${props.data.customer.phone}` : '';\r\n    let pickUpTime = props.data.customer && props.data.customer.pickupTime ? `${props.data.customer.pickupTime}` : '';\r\n\r\n    // Button Pay: dialog\r\n\r\n    const [Dialogopen, setDialogOpen] = useState(false);\r\n    // open\r\n    const handlePayClickOpen = () => {\r\n        setIsPayButtonDisabled(true);\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    // close\r\n    const handlePayCancel = () => {\r\n        setDialogOpen(false);\r\n    };\r\n\r\n    //api- payment status\r\n    const updatePMTStatus = async (orderId) => {\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const result = await axios.get(`http://localhost:5500/orders/pay/${orderId}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            console.log(result);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    // change pmt status data\r\n    const handlePayConfirm = () => {\r\n        setDialogOpen(false);\r\n        updatePMTStatus(id);\r\n\r\n        setIsPayButtonDisabled(true);\r\n        setIsDoneButtonDisabled(false);\r\n    };\r\n    //api- order status\r\n    const updateOrderStatus = async (orderId) => {\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const result = await axios.get(`http://localhost:5500/orders/complete/${orderId}`, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            console.log(result);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    // Button Done\r\n    const orderDone = () => {\r\n        updateOrderStatus(id);\r\n        link('/order/current-orders');\r\n    }\r\n    return (\r\n        <div>\r\n            <ThemeProvider theme={theme}>\r\n\r\n                {/* Head: Order Head */}\r\n                <Grid container>\r\n                    {/* back icon */}\r\n                    <Grid item xs={5} >\r\n                        <IconButton\r\n                            onClick={handleBackClick}>\r\n                            <ArrowBackIosNewIcon\r\n                                style={styles.backIcon} />\r\n                        </IconButton>\r\n                    </Grid>\r\n\r\n                    {/* Head: Order Type: */}\r\n                    <Grid item xs={5} style={styles.orderTypeTxt} >\r\n                        {props.data.orderType}\r\n                    </Grid>\r\n                    {/* Head (Dine In Only): Table Number */}\r\n                    {props.data.orderType === 'DineIn' && (\r\n                        <Grid item xs={3} style={styles.dropdownTxt}>\r\n                            Table:\r\n                            <Select\r\n                                style={styles.dropdown}\r\n                                value={table}\r\n                                readOnly\r\n                            >\r\n                                <MenuItem value={table}>{table}</MenuItem>\r\n                            </Select>\r\n                        </Grid>\r\n                    )}\r\n\r\n                </Grid>\r\n                {/* phone order only */}\r\n                {props.data.orderType === 'Phone' && (\r\n                    <Grid container>\r\n                        <Grid item xs={4} >\r\n                            <TextField\r\n                                size=\"small\"\r\n                                margin=\"normal\"\r\n                                disabled\r\n                                id=\"cusName\" name=\"cusName\"\r\n                                label=\"Customer Name\"\r\n                                // inputRef={cusNameRef}\r\n                                value={cusName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3} >\r\n                            <TextField\r\n                                size=\"small\"\r\n                                margin=\"normal\"\r\n                                disabled\r\n                                id=\"cusPhone\" name=\"cusPhone\"\r\n                                label=\"Phone\"\r\n                                // inputRef={cusPhoneRef}\r\n                                value={cusPhone}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={5} >\r\n                            <TextField\r\n                                size=\"small\"\r\n                                margin=\"normal\"\r\n                                disabled\r\n                                id=\"pickupTime\" name=\"pickupTime\"\r\n                                label=\"Pick Up Time\"\r\n                                // inputRef={pickupTimeRef}\r\n                                value={pickUpTime}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                )}\r\n                {/* Order detail list */}\r\n                <Grid container>\r\n                    <Grid item xs={12}\r\n                        style={styles.table}>\r\n                        <TableContainer\r\n                            component={Paper}\r\n                            style={{ height: '38vh' }}>\r\n\r\n                            <Table size=\"small\" >\r\n                                <TableHead\r\n                                    style={{ position: 'sticky', top: 0 }}>\r\n                                    <TableRow>\r\n                                        <TableCell style={styles.tableH}>Item</TableCell>\r\n                                        <TableCell style={styles.tableH} align=\"left\">Quantity</TableCell>\r\n                                        <TableCell style={styles.tableH}>Price</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n\r\n                                <TableBody>\r\n                                    {props.data && props.data.food && props.data.food.length > 0 && props.data.food.map((v) => (\r\n                                        <TableRow>\r\n                                            <TableCell style={styles.tableB}>{v.altName}</TableCell>\r\n                                            <TableCell style={{ ...styles.tableB, paddingRight: '15%' }} align=\"center\">{v.quality}</TableCell>\r\n                                            <TableCell style={{ ...styles.tableB, paddingRight: '15%' }} align=\"center\">{v.dineInPrice * v.quality}</TableCell>\r\n                                            {/* <TableCell style={styles.tableB} align=\"center\">{v.total}</TableCell> */}\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* Note & Order subtotal list */}\r\n                <Grid container >\r\n                    {/* Note Display Here */}\r\n                    <Grid item xs={5} >\r\n                        <p style={{ marginLeft: '7%', fontWeight: 'bold' }}>Note: </p>\r\n                        <p style={{\r\n                            maxWidth: '40rem', wordWrap: 'break-word',\r\n                            maxHeight: '4rem', overflow: 'scroll',\r\n                            marginLeft: '7%'\r\n                        }}>\r\n                            {note}\r\n                        </p>\r\n                    </Grid>\r\n                    {/* Subtotal */}\r\n                    <Grid item xs={7} style={styles.total}>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ ...styles.subtotaltxt, fontWeight: 'bold' }}\r\n                                align=\"right\">\r\n                                Sub Total:\r\n                            </TableCell>\r\n                            <TableCell\r\n                                ref={beforeTaxRef}\r\n                                style={styles.subtotaltxt}\r\n                                align=\"right\">\r\n                                {getTotal()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ ...styles.subtotaltxt, fontWeight: 'bold' }}\r\n                                align=\"right\">\r\n                                Tax(13%):\r\n                            </TableCell>\r\n                            <TableCell\r\n                                ref={taxRef}\r\n                                style={styles.subtotaltxt}\r\n                                align=\"right\">\r\n                                {getTax()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ ...styles.subtotaltxt, fontWeight: 'bold' }}\r\n                                align=\"right\">\r\n                                Total:  $\r\n                            </TableCell>\r\n                            <TableCell\r\n                                ref={totalCostRef}\r\n                                style={styles.subtotaltxt}\r\n                                align=\"right\">\r\n                                {getTaxAndTotal()}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* Buttons: Done-order status & Pay-pmy status */}\r\n                <Grid container style={styles.space}>\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            onClick={orderDone}\r\n                            style={styles.button}\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            color='success'\r\n                            disabled={isDoneButtonDisabled}\r\n                        >\r\n                            Done\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <Button\r\n                            style={styles.button}\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            onClick={handlePayClickOpen}\r\n                            disabled={isPayButtonDisabled}\r\n                        >\r\n                            Pay &nbsp;&nbsp; $ {getTaxAndTotal()}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </ThemeProvider>\r\n\r\n            {/* Dialog Window */}\r\n            <Dialog open={Dialogopen} onClose={handlePayCancel}>\r\n                <DialogTitle>Payment Confirm</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Is this order paid?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handlePayCancel}>Cancel</Button>\r\n                    <Button onClick={handlePayConfirm}>Yes</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default DetailDisplay;","E:\\Capstone - Halo UI\\capstone\\react-project\\src\\admin\\services\\clearAuth.js",[],[],{"ruleId":"534","severity":1,"message":"535","line":1,"column":8,"nodeType":"536","messageId":"537","endLine":1,"endColumn":12},{"ruleId":"534","severity":1,"message":"538","line":4,"column":10,"nodeType":"536","messageId":"537","endLine":4,"endColumn":16},{"ruleId":"534","severity":1,"message":"539","line":5,"column":8,"nodeType":"536","messageId":"537","endLine":5,"endColumn":24},{"ruleId":"540","severity":1,"message":"541","line":29,"column":25,"nodeType":"542","messageId":"543","endLine":29,"endColumn":27},{"ruleId":"534","severity":1,"message":"544","line":10,"column":8,"nodeType":"536","messageId":"537","endLine":10,"endColumn":24},{"ruleId":"534","severity":1,"message":"545","line":11,"column":8,"nodeType":"536","messageId":"537","endLine":11,"endColumn":16},{"ruleId":"540","severity":1,"message":"541","line":43,"column":25,"nodeType":"542","messageId":"543","endLine":43,"endColumn":27},{"ruleId":"540","severity":1,"message":"541","line":41,"column":42,"nodeType":"542","messageId":"543","endLine":41,"endColumn":44},{"ruleId":"546","severity":1,"message":"547","line":51,"column":8,"nodeType":"548","endLine":51,"endColumn":29,"suggestions":"549"},{"ruleId":"534","severity":1,"message":"550","line":1,"column":17,"nodeType":"536","messageId":"537","endLine":1,"endColumn":25},{"ruleId":"534","severity":1,"message":"551","line":1,"column":27,"nodeType":"536","messageId":"537","endLine":1,"endColumn":36},{"ruleId":"534","severity":1,"message":"552","line":2,"column":10,"nodeType":"536","messageId":"537","endLine":2,"endColumn":14},{"ruleId":"534","severity":1,"message":"553","line":4,"column":8,"nodeType":"536","messageId":"537","endLine":4,"endColumn":13},{"ruleId":"534","severity":1,"message":"554","line":7,"column":10,"nodeType":"536","messageId":"537","endLine":7,"endColumn":16},{"ruleId":"546","severity":1,"message":"547","line":61,"column":8,"nodeType":"548","endLine":61,"endColumn":21,"suggestions":"555"},{"ruleId":"546","severity":1,"message":"547","line":92,"column":8,"nodeType":"548","endLine":92,"endColumn":25,"suggestions":"556"},{"ruleId":"534","severity":1,"message":"554","line":10,"column":10,"nodeType":"536","messageId":"537","endLine":10,"endColumn":16},{"ruleId":"534","severity":1,"message":"557","line":17,"column":10,"nodeType":"536","messageId":"537","endLine":17,"endColumn":15},{"ruleId":"534","severity":1,"message":"558","line":43,"column":7,"nodeType":"536","messageId":"537","endLine":43,"endColumn":16},{"ruleId":"534","severity":1,"message":"559","line":72,"column":15,"nodeType":"536","messageId":"537","endLine":72,"endColumn":23},{"ruleId":"546","severity":1,"message":"560","line":93,"column":8,"nodeType":"548","endLine":93,"endColumn":40,"suggestions":"561"},{"ruleId":"562","severity":1,"message":"563","line":143,"column":32,"nodeType":"564","messageId":"565","endLine":143,"endColumn":34},{"ruleId":"540","severity":1,"message":"541","line":198,"column":35,"nodeType":"542","messageId":"543","endLine":198,"endColumn":37},{"ruleId":"540","severity":1,"message":"541","line":201,"column":42,"nodeType":"542","messageId":"543","endLine":201,"endColumn":44},{"ruleId":"534","severity":1,"message":"566","line":3,"column":10,"nodeType":"536","messageId":"537","endLine":3,"endColumn":22},{"ruleId":"534","severity":1,"message":"567","line":24,"column":7,"nodeType":"536","messageId":"537","endLine":24,"endColumn":19},{"ruleId":"534","severity":1,"message":"568","line":10,"column":10,"nodeType":"536","messageId":"537","endLine":10,"endColumn":24},{"ruleId":"534","severity":1,"message":"569","line":14,"column":7,"nodeType":"536","messageId":"537","endLine":14,"endColumn":19},{"ruleId":"546","severity":1,"message":"547","line":46,"column":6,"nodeType":"548","endLine":46,"endColumn":17,"suggestions":"570"},{"ruleId":"534","severity":1,"message":"571","line":15,"column":10,"nodeType":"536","messageId":"537","endLine":15,"endColumn":25},{"ruleId":"534","severity":1,"message":"572","line":15,"column":27,"nodeType":"536","messageId":"537","endLine":15,"endColumn":45},{"ruleId":"546","severity":1,"message":"547","line":37,"column":6,"nodeType":"548","endLine":37,"endColumn":17,"suggestions":"573"},{"ruleId":"534","severity":1,"message":"574","line":2,"column":16,"nodeType":"536","messageId":"537","endLine":2,"endColumn":25},{"ruleId":"534","severity":1,"message":"551","line":1,"column":27,"nodeType":"536","messageId":"537","endLine":1,"endColumn":36},{"ruleId":"534","severity":1,"message":"574","line":2,"column":16,"nodeType":"536","messageId":"537","endLine":2,"endColumn":25},{"ruleId":"534","severity":1,"message":"574","line":2,"column":16,"nodeType":"536","messageId":"537","endLine":2,"endColumn":25},{"ruleId":"546","severity":1,"message":"547","line":41,"column":8,"nodeType":"548","endLine":41,"endColumn":23,"suggestions":"575"},{"ruleId":"546","severity":1,"message":"547","line":62,"column":8,"nodeType":"548","endLine":62,"endColumn":17,"suggestions":"576"},{"ruleId":"534","severity":1,"message":"577","line":74,"column":19,"nodeType":"536","messageId":"537","endLine":74,"endColumn":27},{"ruleId":"534","severity":1,"message":"578","line":75,"column":21,"nodeType":"536","messageId":"537","endLine":75,"endColumn":31},{"ruleId":"534","severity":1,"message":"579","line":2,"column":8,"nodeType":"536","messageId":"537","endLine":2,"endColumn":15},{"ruleId":"540","severity":1,"message":"580","line":19,"column":29,"nodeType":"542","messageId":"543","endLine":19,"endColumn":31},{"ruleId":"540","severity":1,"message":"541","line":29,"column":25,"nodeType":"542","messageId":"543","endLine":29,"endColumn":27},{"ruleId":"534","severity":1,"message":"574","line":2,"column":16,"nodeType":"536","messageId":"537","endLine":2,"endColumn":25},{"ruleId":"534","severity":1,"message":"581","line":2,"column":10,"nodeType":"536","messageId":"537","endLine":2,"endColumn":21},{"ruleId":"534","severity":1,"message":"582","line":7,"column":10,"nodeType":"536","messageId":"537","endLine":7,"endColumn":19},{"ruleId":"534","severity":1,"message":"583","line":7,"column":20,"nodeType":"536","messageId":"537","endLine":7,"endColumn":28},{"ruleId":"584","severity":1,"message":"585","line":150,"column":29,"nodeType":"586","endLine":150,"endColumn":95},{"ruleId":"584","severity":1,"message":"585","line":173,"column":29,"nodeType":"586","endLine":173,"endColumn":95},{"ruleId":"584","severity":1,"message":"585","line":180,"column":25,"nodeType":"586","endLine":180,"endColumn":85},{"ruleId":"534","severity":1,"message":"558","line":70,"column":7,"nodeType":"536","messageId":"537","endLine":70,"endColumn":16},{"ruleId":"584","severity":1,"message":"585","line":136,"column":25,"nodeType":"586","endLine":136,"endColumn":85},{"ruleId":"534","severity":1,"message":"581","line":2,"column":10,"nodeType":"536","messageId":"537","endLine":2,"endColumn":21},{"ruleId":"534","severity":1,"message":"587","line":80,"column":7,"nodeType":"536","messageId":"537","endLine":80,"endColumn":16},{"ruleId":"546","severity":1,"message":"588","line":141,"column":8,"nodeType":"548","endLine":141,"endColumn":21,"suggestions":"589"},{"ruleId":"590","severity":1,"message":"591","line":41,"column":9,"nodeType":"592","messageId":"543","endLine":41,"endColumn":16},{"ruleId":"534","severity":1,"message":"558","line":51,"column":7,"nodeType":"536","messageId":"537","endLine":51,"endColumn":16},{"ruleId":"534","severity":1,"message":"544","line":13,"column":8,"nodeType":"536","messageId":"537","endLine":13,"endColumn":24},{"ruleId":"534","severity":1,"message":"545","line":14,"column":8,"nodeType":"536","messageId":"537","endLine":14,"endColumn":16},{"ruleId":"534","severity":1,"message":"552","line":15,"column":8,"nodeType":"536","messageId":"537","endLine":15,"endColumn":12},{"ruleId":"534","severity":1,"message":"593","line":18,"column":8,"nodeType":"536","messageId":"537","endLine":18,"endColumn":24},{"ruleId":"540","severity":1,"message":"541","line":51,"column":25,"nodeType":"542","messageId":"543","endLine":51,"endColumn":27},{"ruleId":"534","severity":1,"message":"594","line":2,"column":31,"nodeType":"536","messageId":"537","endLine":2,"endColumn":37},{"ruleId":"590","severity":1,"message":"595","line":33,"column":9,"nodeType":"592","messageId":"543","endLine":33,"endColumn":20},{"ruleId":"546","severity":1,"message":"547","line":104,"column":8,"nodeType":"548","endLine":104,"endColumn":19,"suggestions":"596"},{"ruleId":"540","severity":1,"message":"541","line":52,"column":47,"nodeType":"542","messageId":"543","endLine":52,"endColumn":49},{"ruleId":"534","severity":1,"message":"594","line":2,"column":31,"nodeType":"536","messageId":"537","endLine":2,"endColumn":37},{"ruleId":"534","severity":1,"message":"551","line":2,"column":20,"nodeType":"536","messageId":"537","endLine":2,"endColumn":29},{"ruleId":"534","severity":1,"message":"597","line":13,"column":48,"nodeType":"536","messageId":"537","endLine":13,"endColumn":51},{"ruleId":"534","severity":1,"message":"598","line":24,"column":8,"nodeType":"536","messageId":"537","endLine":24,"endColumn":14},{"ruleId":"534","severity":1,"message":"599","line":25,"column":8,"nodeType":"536","messageId":"537","endLine":25,"endColumn":16},{"ruleId":"534","severity":1,"message":"600","line":34,"column":10,"nodeType":"536","messageId":"537","endLine":34,"endColumn":15},{"ruleId":"534","severity":1,"message":"601","line":143,"column":12,"nodeType":"536","messageId":"537","endLine":143,"endColumn":25},{"ruleId":"534","severity":1,"message":"602","line":144,"column":11,"nodeType":"536","messageId":"537","endLine":144,"endColumn":28},{"ruleId":"534","severity":1,"message":"603","line":245,"column":11,"nodeType":"536","messageId":"537","endLine":245,"endColumn":20},{"ruleId":"534","severity":1,"message":"604","line":248,"column":11,"nodeType":"536","messageId":"537","endLine":248,"endColumn":20},{"ruleId":"534","severity":1,"message":"551","line":1,"column":27,"nodeType":"536","messageId":"537","endLine":1,"endColumn":36},{"ruleId":"534","severity":1,"message":"553","line":3,"column":8,"nodeType":"536","messageId":"537","endLine":3,"endColumn":13},{"ruleId":"540","severity":1,"message":"541","line":55,"column":47,"nodeType":"542","messageId":"543","endLine":55,"endColumn":49},{"ruleId":"534","severity":1,"message":"605","line":7,"column":8,"nodeType":"536","messageId":"537","endLine":7,"endColumn":12},{"ruleId":"534","severity":1,"message":"606","line":57,"column":7,"nodeType":"536","messageId":"537","endLine":57,"endColumn":12},{"ruleId":"546","severity":1,"message":"547","line":105,"column":8,"nodeType":"548","endLine":105,"endColumn":19,"suggestions":"607"},{"ruleId":"534","severity":1,"message":"606","line":22,"column":7,"nodeType":"536","messageId":"537","endLine":22,"endColumn":12},{"ruleId":"534","severity":1,"message":"597","line":13,"column":48,"nodeType":"536","messageId":"537","endLine":13,"endColumn":51},{"ruleId":"534","severity":1,"message":"600","line":34,"column":10,"nodeType":"536","messageId":"537","endLine":34,"endColumn":15},{"ruleId":"534","severity":1,"message":"608","line":121,"column":7,"nodeType":"536","messageId":"537","endLine":121,"endColumn":13},{"ruleId":"546","severity":1,"message":"547","line":166,"column":8,"nodeType":"548","endLine":166,"endColumn":19,"suggestions":"609"},{"ruleId":"534","severity":1,"message":"603","line":272,"column":11,"nodeType":"536","messageId":"537","endLine":272,"endColumn":20},{"ruleId":"534","severity":1,"message":"604","line":275,"column":11,"nodeType":"536","messageId":"537","endLine":275,"endColumn":20},{"ruleId":"534","severity":1,"message":"574","line":2,"column":16,"nodeType":"536","messageId":"537","endLine":2,"endColumn":25},{"ruleId":"534","severity":1,"message":"610","line":8,"column":8,"nodeType":"536","messageId":"537","endLine":8,"endColumn":22},{"ruleId":"534","severity":1,"message":"611","line":16,"column":7,"nodeType":"536","messageId":"537","endLine":16,"endColumn":13},{"ruleId":"546","severity":1,"message":"547","line":41,"column":8,"nodeType":"548","endLine":41,"endColumn":21,"suggestions":"612"},{"ruleId":"534","severity":1,"message":"574","line":2,"column":16,"nodeType":"536","messageId":"537","endLine":2,"endColumn":25},{"ruleId":"534","severity":1,"message":"613","line":10,"column":8,"nodeType":"536","messageId":"537","endLine":10,"endColumn":16},{"ruleId":"534","severity":1,"message":"614","line":13,"column":23,"nodeType":"536","messageId":"537","endLine":13,"endColumn":36},{"ruleId":"534","severity":1,"message":"615","line":24,"column":7,"nodeType":"536","messageId":"537","endLine":24,"endColumn":14},{"ruleId":"546","severity":1,"message":"547","line":65,"column":8,"nodeType":"548","endLine":65,"endColumn":17,"suggestions":"616"},{"ruleId":"534","severity":1,"message":"613","line":10,"column":8,"nodeType":"536","messageId":"537","endLine":10,"endColumn":16},{"ruleId":"534","severity":1,"message":"614","line":13,"column":23,"nodeType":"536","messageId":"537","endLine":13,"endColumn":36},{"ruleId":"534","severity":1,"message":"615","line":24,"column":7,"nodeType":"536","messageId":"537","endLine":24,"endColumn":14},{"ruleId":"534","severity":1,"message":"581","line":2,"column":16,"nodeType":"536","messageId":"537","endLine":2,"endColumn":27},{"ruleId":"534","severity":1,"message":"613","line":10,"column":8,"nodeType":"536","messageId":"537","endLine":10,"endColumn":16},{"ruleId":"534","severity":1,"message":"614","line":13,"column":23,"nodeType":"536","messageId":"537","endLine":13,"endColumn":36},{"ruleId":"534","severity":1,"message":"615","line":24,"column":7,"nodeType":"536","messageId":"537","endLine":24,"endColumn":14},{"ruleId":"546","severity":1,"message":"547","line":63,"column":6,"nodeType":"548","endLine":63,"endColumn":17,"suggestions":"617"},{"ruleId":"534","severity":1,"message":"594","line":2,"column":31,"nodeType":"536","messageId":"537","endLine":2,"endColumn":37},{"ruleId":"590","severity":1,"message":"595","line":35,"column":9,"nodeType":"592","messageId":"543","endLine":35,"endColumn":20},{"ruleId":"534","severity":1,"message":"618","line":62,"column":7,"nodeType":"536","messageId":"537","endLine":62,"endColumn":16},{"ruleId":"546","severity":1,"message":"619","line":143,"column":8,"nodeType":"548","endLine":143,"endColumn":19,"suggestions":"620"},{"ruleId":"540","severity":1,"message":"580","line":24,"column":29,"nodeType":"542","messageId":"543","endLine":24,"endColumn":31},{"ruleId":"540","severity":1,"message":"541","line":36,"column":25,"nodeType":"542","messageId":"543","endLine":36,"endColumn":27},{"ruleId":"534","severity":1,"message":"611","line":11,"column":7,"nodeType":"536","messageId":"537","endLine":11,"endColumn":13},{"ruleId":"534","severity":1,"message":"621","line":53,"column":11,"nodeType":"536","messageId":"537","endLine":53,"endColumn":13},{"ruleId":"534","severity":1,"message":"611","line":11,"column":7,"nodeType":"536","messageId":"537","endLine":11,"endColumn":13},{"ruleId":"534","severity":1,"message":"621","line":49,"column":13,"nodeType":"536","messageId":"537","endLine":49,"endColumn":15},{"ruleId":"534","severity":1,"message":"622","line":8,"column":10,"nodeType":"536","messageId":"537","endLine":8,"endColumn":15},{"ruleId":"534","severity":1,"message":"611","line":12,"column":7,"nodeType":"536","messageId":"537","endLine":12,"endColumn":13},{"ruleId":"534","severity":1,"message":"623","line":35,"column":11,"nodeType":"536","messageId":"537","endLine":35,"endColumn":16},{"ruleId":"534","severity":1,"message":"622","line":8,"column":10,"nodeType":"536","messageId":"537","endLine":8,"endColumn":15},{"ruleId":"534","severity":1,"message":"611","line":13,"column":7,"nodeType":"536","messageId":"537","endLine":13,"endColumn":13},{"ruleId":"534","severity":1,"message":"621","line":41,"column":13,"nodeType":"536","messageId":"537","endLine":41,"endColumn":15},{"ruleId":"534","severity":1,"message":"614","line":8,"column":23,"nodeType":"536","messageId":"537","endLine":8,"endColumn":36},{"ruleId":"534","severity":1,"message":"615","line":102,"column":7,"nodeType":"536","messageId":"537","endLine":102,"endColumn":14},{"ruleId":"540","severity":1,"message":"541","line":52,"column":47,"nodeType":"542","messageId":"543","endLine":52,"endColumn":49},{"ruleId":"534","severity":1,"message":"551","line":2,"column":20,"nodeType":"536","messageId":"537","endLine":2,"endColumn":29},{"ruleId":"534","severity":1,"message":"597","line":13,"column":48,"nodeType":"536","messageId":"537","endLine":13,"endColumn":51},{"ruleId":"534","severity":1,"message":"598","line":24,"column":8,"nodeType":"536","messageId":"537","endLine":24,"endColumn":14},{"ruleId":"534","severity":1,"message":"599","line":25,"column":8,"nodeType":"536","messageId":"537","endLine":25,"endColumn":16},{"ruleId":"534","severity":1,"message":"600","line":34,"column":10,"nodeType":"536","messageId":"537","endLine":34,"endColumn":15},{"ruleId":"534","severity":1,"message":"601","line":142,"column":12,"nodeType":"536","messageId":"537","endLine":142,"endColumn":25},{"ruleId":"534","severity":1,"message":"602","line":143,"column":11,"nodeType":"536","messageId":"537","endLine":143,"endColumn":28},{"ruleId":"534","severity":1,"message":"603","line":247,"column":11,"nodeType":"536","messageId":"537","endLine":247,"endColumn":20},{"ruleId":"534","severity":1,"message":"604","line":250,"column":11,"nodeType":"536","messageId":"537","endLine":250,"endColumn":20},{"ruleId":"540","severity":1,"message":"580","line":58,"column":38,"nodeType":"542","messageId":"543","endLine":58,"endColumn":40},{"ruleId":"546","severity":1,"message":"624","line":66,"column":8,"nodeType":"548","endLine":66,"endColumn":17,"suggestions":"625"},{"ruleId":"534","severity":1,"message":"551","line":2,"column":20,"nodeType":"536","messageId":"537","endLine":2,"endColumn":29},{"ruleId":"534","severity":1,"message":"597","line":13,"column":48,"nodeType":"536","messageId":"537","endLine":13,"endColumn":51},{"ruleId":"534","severity":1,"message":"626","line":17,"column":8,"nodeType":"536","messageId":"537","endLine":17,"endColumn":18},{"ruleId":"534","severity":1,"message":"627","line":19,"column":8,"nodeType":"536","messageId":"537","endLine":19,"endColumn":33},{"ruleId":"534","severity":1,"message":"628","line":20,"column":8,"nodeType":"536","messageId":"537","endLine":20,"endColumn":23},{"ruleId":"534","severity":1,"message":"629","line":21,"column":8,"nodeType":"536","messageId":"537","endLine":21,"endColumn":25},{"ruleId":"534","severity":1,"message":"630","line":22,"column":8,"nodeType":"536","messageId":"537","endLine":22,"endColumn":30},{"ruleId":"534","severity":1,"message":"631","line":27,"column":8,"nodeType":"536","messageId":"537","endLine":27,"endColumn":15},{"ruleId":"534","severity":1,"message":"600","line":34,"column":10,"nodeType":"536","messageId":"537","endLine":34,"endColumn":15},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","'ResponsiveAppBar' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["632"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'styled' is defined but never used.",["633"],["634"],"'Table' is defined but never used.","'storeInfo' is assigned a value but never used.","'newValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'businessHour' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["635"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'loginService' is defined but never used.","'DefaultPages' is assigned a value but never used.","'preventDefault' is defined but never used.","'todayRevenue' is assigned a value but never used.",["636"],"'firstFiveOrders' is assigned a value but never used.","'setFirstFiveOrders' is assigned a value but never used.",["637"],"'useParams' is defined but never used.",["638"],["639"],"'setImage' is assigned a value but never used.","'setQuality' is assigned a value but never used.","'Product' is defined but never used.","Expected '!==' and instead saw '!='.","'useNavigate' is defined but never used.","'TableCell' is defined but never used.","'TableRow' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'menuItems' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["640"],"no-dupe-keys","Duplicate key 'display'.","ObjectExpression","'LockOutlinedIcon' is defined but never used.","'useRef' is defined but never used.","Duplicate key 'marginRight'.",["641"],"'Tab' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'width' is defined but never used.","'selectedTable' is assigned a value but never used.","'handleTableChange' is assigned a value but never used.","'orderDone' is assigned a value but never used.","'orderPaid' is assigned a value but never used.","'Grid' is defined but never used.","'pages' is assigned a value but never used.",["642"],"'tables' is assigned a value but never used.",["643"],"'InputAdornment' is defined but never used.","'styles' is assigned a value but never used.",["644"],"'EditIcon' is defined but never used.","'ThemeProvider' is defined but never used.","'mdTheme' is assigned a value but never used.",["645"],["646"],"'allOrders' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'page' and 'token'. Either include them or remove the dependency array.",["647"],"'id' is assigned a value but never used.","'Paper' is defined but never used.","'tagId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["648"],"'Typography' is defined but never used.","'LocalPrintshopTwoToneIcon' is defined but never used.","'EditTwoToneIcon' is defined but never used.","'SafetyDividerIcon' is defined but never used.","'StickyNote2TwoToneIcon' is defined but never used.","'Popover' is defined but never used.",{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"657","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"657","fix":"666"},{"desc":"667","fix":"668"},{"desc":"667","fix":"669"},{"desc":"651","fix":"670"},{"desc":"662","fix":"671"},{"desc":"672","fix":"673"},{"desc":"674","fix":"675"},{"desc":"676","fix":"677"},"Update the dependencies array to be: [setTables, navigate, token]",{"range":"678","text":"679"},"Update the dependencies array to be: [setRoleList, token]",{"range":"680","text":"681"},"Update the dependencies array to be: [setEmployeeList, token]",{"range":"682","text":"683"},"Update the dependencies array to be: [businessHour, props, props.getTime, setBusinessHour]",{"range":"684","text":"685"},"Update the dependencies array to be: [setOrders, token]",{"range":"686","text":"687"},{"range":"688","text":"687"},"Update the dependencies array to be: [setCategories, token]",{"range":"689","text":"690"},"Update the dependencies array to be: [setTags, token]",{"range":"691","text":"692"},"Update the dependencies array to be: [products, setProducts]",{"range":"693","text":"694"},{"range":"695","text":"687"},"Update the dependencies array to be: [setTables, token]",{"range":"696","text":"697"},{"range":"698","text":"697"},{"range":"699","text":"681"},{"range":"700","text":"692"},"Update the dependencies array to be: [setDishes, token]",{"range":"701","text":"702"},"Update the dependencies array to be: [page, setOrders, token]",{"range":"703","text":"704"},"Update the dependencies array to be: [id, setData]",{"range":"705","text":"706"},[1612,1633],"[setTables, navigate, token]",[1845,1858],"[setRoleList, token]",[2929,2946],"[setEmployeeList, token]",[2902,2934],"[businessHour, props, props.getTime, setBusinessHour]",[1185,1196],"[setOrders, token]",[1045,1056],[1475,1490],"[setCategories, token]",[2199,2208],"[setTags, token]",[4755,4768],"[products, setProducts]",[2816,2827],[3272,3283],"[setTables, token]",[4428,4439],[1246,1259],[1995,2004],[1807,1818],"[setDishes, token]",[5627,5638],"[page, setOrders, token]",[1795,1804],"[id, setData]"]